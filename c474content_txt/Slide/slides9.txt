b'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.1\n\nLecture 9\nText Mining\nCOMP 474/6741, Winter 2021\n\nRen\xc3\xa9 Witte\nDepartment of Computer Science\n\nand Software Engineering\nConcordia University\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.2\n\nOutline\n\n1 Introduction\n\n2 Natural Language Processing (NLP)\n\n3 Text Mining\n\n4 Notes and Further Reading\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.3\n\nSlides Credit\n\n\xe2\x80\xa2 Includes slides from Hoifung Poon, Chris Quirk & Scott Wen-Tau Yih, Machine\nReading for Precision Medicine, https://www.microsoft.com/en-us/research/\nuploads/prod/2018/01/1802_aaai-tutorial_precision-med.pdf\n\n\xe2\x80\xa2 Includes slides from Matthew Honnibal & Ines Montani, An introduction to\nspaCy,\nhttps://github.com/explosion/talks/blob/master/2017-08-28_spaCy-101.pdf\n\nhttps://www.microsoft.com/en-us/research/uploads/prod/2018/01/1802_aaai-tutorial_precision-med.pdf\nhttps://www.microsoft.com/en-us/research/uploads/prod/2018/01/1802_aaai-tutorial_precision-med.pdf\nhttps://github.com/explosion/talks/blob/master/2017-08-28_spaCy-101.pdf\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.4\n\nInformation Overload\n\nToo much (textual) information\n\n\xe2\x80\xa2 We now have electronic books, documents, web pages, emails, blogs, news,\nchats, memos, research papers, . . .\n\n\xe2\x80\xa2 . . . all of it immediately accessible, thanks to databases and Information\nRetrieval (IR)\n\n\xe2\x80\xa2 An estimated 80\xe2\x80\x9385% of all data stored in databases are natural language texts\n\xe2\x80\xa2 But humans did not scale so well. . .\n\nResults in the common perception of Information Overload (or even\ninformation rage)\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.5\n\nArchitecture 1.0\n\nDocumentsKnowledge Worker\n\n\n\nExample: Tumor Board KB Curation\n\n21\n\nThe deletion mutation on exon-19 of EGFR gene was present in 16\n\npatients, while the L858E point mutation on exon-21 was noted in 10.\n\nAll patients were treated with gefitinib and showed a partial response.\n\nGefitinib can treat tumors w. EGFR-L858E mutation\n\n\n\nPubMed\n27 million abstracts\n\nTwo new abstracts every minute\n\nAdds over one million every year\n\n23\n\n\n\n\xe2\x80\xa6\n\nVDR+ binds to \n\nSMAD3 to form\n\n\xe2\x80\xa6\n\n\xe2\x80\xa6\n\nJUN expression \n\nis induced by \n\nSMAD3/4\n\n\xe2\x80\xa6\n\nPMID: 123\n\nPMID: 456\n\n\xe2\x80\xa6\n\xe2\x80\xa6\n\nMachine Reading\n\nKnowledge \n\nBase\n\n29\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.9\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.10\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.11\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.12\n\nArchitecture 2.0\n\nKnowledge Worker DocumentsNLP Pipeline\n\n\xe2\x86\x92 Worksheet #8: Task 1\n\n\n\nhttps://www.refinitiv.com/perspectives/ai- digitalization/four- ways- to- apply- nlp- in- financial- services/\n\nhttps://www.refinitiv.com/perspectives/ai-digitalization/four-ways-to-apply-nlp-in-financial-services/\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.14\n\nSo you want to build a Text Mining system. . .\n\nRequirements\nAn NLP system requires a large amount of infrastructure work:\n\n\xe2\x80\xa2 Document handling, in various formats (plain text, HTML, XML, PDF, . . .), from\nvarious sources (files, DBs, email, . . .)\n\n\xe2\x80\xa2 Annotation handling (stand-off markup)\n\xe2\x80\xa2 Component implementations for standard tasks, like Tokenizers, Sentence\n\nSplitters, Part-of-Speech (POS) Taggers, Finite-State Transducers, Full\nParsers, Classifiers, Noun Phrase Chunkers, Lemmatizers, Entity Taggers,\nCoreference Resolution Engines, Summarizers, . . .\n\nAs well as resources for concrete tasks and languages:\n\xe2\x80\xa2 Lexicons, WordNets\n\xe2\x80\xa2 Grammar files and Language models\n\xe2\x80\xa2 Machine Learning Algorithms\n\xe2\x80\xa2 Evaluation Metrics\n\xe2\x80\xa2 etc.\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.15\n\nExisting Resources\n\nFortunately, you don\xe2\x80\x99t have to start from scratch\nMany (open source) tools and resources are available:\nNLP Tools: programs performing a single task, like classifiers, parsers, or NP\n\nchunkers\nFrameworks: integration architectures for combining and controlling all components\n\nand resources of an NLP system\nResources: for various languages, like lexicons, wordnets, or grammars\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.16\n\nNLP Development\n\nMajor Frameworks\nTwo important frameworks are:\n\n\xe2\x80\xa2 GATE (General Architecture for Text Engineering), under development since\n1995 at University of Sheffield, UK\n\n\xe2\x80\xa2 UIMA (Unstructured Information Management Architecture), developed by IBM;\nopen-sourced in 2007 (Apache project)\n\nBoth frameworks are open source (GATE: LGPL, UIMA: Apache)\n\nLibraries\n\n\xe2\x80\xa2 Numerous NLP libraries: NLTK (Python), Stanford CoreNLP, OpenNLP. . .\n\xe2\x80\xa2 Various integrations (e.g, CoreNLP has GATE wrapper, Python bindings)\n\nCurrent Trends\n\n\xe2\x80\xa2 Increasing use of Deep Learning tools/frameworks for NLP\n\xe2\x80\xa2 Keras, TensorFlow, PyTorch etc.\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.17\n\nUnstructured Information Management Architecture (UIMA)\n\nCopyright 2011, 2019 The Apache Software Foundation, https://uima.apache.org/d/ruta- current/tools.ruta.book.html\n\nhttps://uima.apache.org/d/ruta-current/tools.ruta.book.html\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.18\n\nGeneral Architecture for Text Engineering (GATE)\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.19\n\nNLP Pipeline in GATE\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.20\n\nPipeline Step: Tokenization\n\nExample Tokenisation Rules\n\n#numbers#\n// a number is any combination of digits\n"DECIMAL_DIGIT_NUMBER"+ >Token;kind=number;\n\n#whitespace#\n(SPACE_SEPARATOR) >SpaceToken;kind=space;\n(CONTROL) >SpaceToken;kind=control;\n\nExample Output\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.21\n\nPipeline Step: POS Tagging\n\nProducing POS Annotations\nPOS-Tagging assigns a part-of-speech-tag (POS tag) to each Token.\n\n\xe2\x80\xa2 GATE comes with the Hepple tagger for English, which is a modified version of\nthe Brill tagger\n\nExample output\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.22\n\nPipeline Step: Named Entity (NE) Detection\n\nTransducer-based NE Detection\nUsing all the information obtained in the previous steps (Tokens, Gazetteer lookups,\nPOS tags), ANNIE now runs a sequence of JAPE-Transducers to detect Named\nEntities (NE)s.\n\nExample for a detected Person\n\nWe can now look at the grammar rules that found this person.\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.23\n\nEntity Detection: Finding Persons\n\nStrategy\nA JAPE grammar rule combines\ninformation obtained from POS-tags with\nGazetteer lookup information\n\n\xe2\x80\xa2 although the last name in the\nexample is not in any list, it can be\nfound based on its POS tag and an\nadditional first name/last name rule\n(not shown)\n\n\xe2\x80\xa2 many additional rules for other\nPerson patterns, as well as\nOrganizations, Dates, Addresses, . . .\n\nPersons with Titles\nRule: PersonTitle\nPriority: 35\n(\n{Token.category == DT}|\n{Token.category == PRP}|\n{Token.category == RB}\n)?\n(\n(TITLE)+\n((FIRSTNAME | FIRSTNAMEAMBIG\n| INITIALS2)\n\n)?\n(PREFIX)*\n(UPPER)\n(PERSONENDING)?\n)\n:person --> ...\n\n\xe2\x86\x92 Worksheet #8: Task 2\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.24\n\nOutline\n\n1 Introduction\n\n2 Natural Language Processing (NLP)\nLanguage Models\nTokenization\nSentence Splitting\nMorphology\nPart-of-Speech (POS) Tagging\nChunking and Parsing\nNamed Entity Recognition\nEntity Linking\nPipelines\n\n3 Text Mining\n\n4 Notes and Further Reading\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.25\n\nNLP Applications\n\nCopyright 2019 by Manning Publications Co., [LHH19]\n\n\n\nhttps://spacy.io/\n\nhttps://spacy.io/\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.27\n\nExample NLP Pipeline\n\nCopyright 2019 by Manning Publications Co., [LHH19]\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.28\n\nLanguage Models\n\nLanguage dependent code\n\n\xe2\x80\xa2 Some parts of spaCy work language-independent\n\xe2\x80\xa2 But many steps require language-specific data, such as rules or pre-trained ML\n\nmodels\n\nNeed to load a language model to start, e.g., for English:\n\nimport spacy\nnlp = spacy.load("en_core_web_sm")\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.29\n\nTokenization\n\nTokenization\nText is split into basic units called Tokens:\n\n\xe2\x80\xa2 word tokens\n\xe2\x80\xa2 number tokens\n\xe2\x80\xa2 space tokens\n\xe2\x80\xa2 . . .\n\nConsistent tokenization is important for all later processing steps\n\nWhat is a word?\nUnfortunately, even tokenization can be difficult:\n\n\xe2\x80\xa2 Is \xe2\x80\x9cJohn\xe2\x80\x99s\xe2\x80\x9d in John\xe2\x80\x99s sick one token or two?\nIf one \xe2\x86\x92 problems in parsing (where\xe2\x80\x99s the verb?)\nIf two \xe2\x86\x92 what do we do with John\xe2\x80\x99s house?\n\n\xe2\x80\xa2 What to do with hyphens?\nE.g., database vs. data-base vs. data base\n\n\xe2\x80\xa2 what to do with \xe2\x80\x9cC++\xe2\x80\x9d, \xe2\x80\x9cA/C\xe2\x80\x9d, \xe2\x80\x9c:-)\xe2\x80\x9d, \xe2\x80\x9c. . .\xe2\x80\x9d?\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.30\n\nTokenization\ndoc = nlp(u"Let\'s go to N.Y.!") \nprint([token.text for token in doc])\n\n\xe2\x86\x92 Worksheet #8: Task 3\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.31\n\nSentence Splitting (a.k.a. Sentence Segmentation)\n\nMark Sentence Boundaries\nDetects sentence units. Easy case:\n\n\xe2\x80\xa2 often, sentences end with \xe2\x80\x9c.\xe2\x80\x9d, \xe2\x80\x9c!\xe2\x80\x9d, or \xe2\x80\x9c?\xe2\x80\x9d\nHard (or annoying) cases:\n\n\xe2\x80\xa2 difficult when a \xe2\x80\x9c.\xe2\x80\x9d do not indicate an EOS:\n\xe2\x80\x9cMR. X\xe2\x80\x9d, \xe2\x80\x9c3.14\xe2\x80\x9d, \xe2\x80\x9cY Corp.\xe2\x80\x9d, . . .\n\n\xe2\x80\xa2 we can detect common abbreviations (\xe2\x80\x9cU.S.\xe2\x80\x9d), but what if a sentence ends with\none?\n\xe2\x80\x9c. . .announced today by the U.S. The. . .\n\n\xe2\x80\xa2 Sentences can be nested (e.g., within quotes)\n\nCorrect sentence boundary is important\nfor many downstream analysis tasks:\n\n\xe2\x80\xa2 POS-Taggers maximize probabilites of tags within a sentence\n\xe2\x80\xa2 Most Parsers work on individual sentences\n\nSee https://en.wikipedia.org/wiki/Sentence_boundary_disambiguation\n\nhttps://en.wikipedia.org/wiki/Sentence_boundary_disambiguation\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.32\n\nSome difficult examples for sentence splitting\n\nI live in the U.S. but I commute to work in Mexico on S.V. Australis for a\nwoman from St. Bernard St. on the Gulf of Mexico.\n\nI went to G.T.You?\n\nShe yelled \xe2\x80\x9cIt\xe2\x80\x99s right here!\xe2\x80\x9d but I kept looking for a sentence boundary\nanyway.\n\nI stared dumbfounded on as things like \xe2\x80\x9cHow did I get here?,\xe2\x80\x9d \xe2\x80\x9cWhere\nam I?,\xe2\x80\x9d \xe2\x80\x9cAm I alive?\xe2\x80\x9d flittered across the screen.\n\nThe author wrote \xe2\x80\x9c\xe2\x80\x99I don\xe2\x80\x99t think it\xe2\x80\x99s conscious.\xe2\x80\x99 Turing said.\xe2\x80\x9d\n\nhttps://www.tm-town.com/natural-language-processing#golden_rules\n\n\xe2\x86\x92 Worksheet #8: Task 4\n\nhttps://www.tm-town.com/natural-language-processing#golden_rules\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.33\n\nMorphological Analysis\n\nMorphological Variants\nWords are changed through a morphological process called inflection:\n\n\xe2\x80\xa2 typically indicates changes in case, gender, number, tense, etc.\n\xe2\x80\xa2 example car \xe2\x86\x92 cars, give \xe2\x86\x92 gives, gave, given\n\nGoal: \xe2\x80\x9cnormalize\xe2\x80\x9d words\n\nStemming and Lemmatization\nTwo main approaches to normalization:\nStemming reduce words to a base form\nLemmatization reduce words to their lemma\nMain difference: stemming just finds any base form, which doesn\xe2\x80\x99t even need to be\na word in the language! Lemmatization find the actual root of a word, but requires\nmorphological analysis.\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.34\n\nStemming vs. Lemmatization\n\nStemming\nCommonly used in Information Retrieval:\n\n\xe2\x80\xa2 Can be achieved with rule-based algorithms, usually based on suffix-stripping\n\xe2\x80\xa2 Standard algorithm for English: the Porter stemmer\n\xe2\x80\xa2 Advantages: simple & fast\n\xe2\x80\xa2 Disadvantages:\n\n\xe2\x80\xa2 Rules are language-dependent\n\xe2\x80\xa2 Can create words that do not exist in the language, e.g., computers \xe2\x86\x92 comput\n\xe2\x80\xa2 Often reduces different words to the same stem, e.g.,\n\narmy, arm \xe2\x86\x92 arm\nstocks, stockings \xe2\x86\x92 stock\n\n\xe2\x80\xa2 Stemming for other languages: Lucene and Snowball stemmer have rule files\nfor many languages\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.35\n\nStemming vs. Lemmatization, Part II\n\nLemmatization\nLemmatization is the process of deriving the base form, or lemma, of a word from\none of its inflected forms. This requires a morphological analysis, which in turn\ntypically requires a lexicon.\n\n\xe2\x80\xa2 Advantages:\n\xe2\x80\xa2 identifies the lemma (root form), which is an actual word\n\xe2\x80\xa2 less errors than in stemming\n\n\xe2\x80\xa2 Disadvantages:\n\xe2\x80\xa2 more complex than stemming, slower\n\xe2\x80\xa2 requires additional language-dependent resources\n\n\xe2\x80\xa2 While stemming is good enough for Information Retrieval, Text Mining often\nrequires lemmatization\n\n\xe2\x80\xa2 Semantics is more important (we need to distinguish an army and an arm!)\n\xe2\x80\xa2 Errors in low-level components can multiply when running downstream\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.36\n\nPart-of-Speech (POS) Tagging\n\nWhere are we now?\nSo far, we splitted texts into tokens and sentences and performed some\nnormalization.\n\n\xe2\x80\xa2 Still a long way to go to an understanding of natural language. . .\nTypical approach in text mining: deal with the complexity of language by applying\nintermediate processing steps to acquire more and more structure. Next stop:\nPOS-Tagging.\n\nPOS-Tagging\nA statistical POS Tagger scans tokens and assigns POS Tags.\nA black cat plays. . . \xe2\x86\x92 A/DT black/JJ cat/NN plays/VB. . .\n\n\xe2\x80\xa2 relies on different word order probabilities\n\xe2\x80\xa2 needs a manually tagged corpus for machine learning\n\nNote: this is not parsing!\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.37\n\nPart-of-Speech (POS) Tagging (II)\n\nTagsets\nA tagset defines the tags to assign to words. Main POS classes are:\nNoun refers to entities like people, places, things or ideas\nAdjective describes the properties of nouns or pronouns\nVerb describes actions, activities and states\nAdverb describes a verb, an adjective or another adverb\nPronoun word that can take the place of a noun\nDeterminer describes the particular reference of a noun\nPreposition expresses spatial or time relationships\nNote: real tagsets have from 45 (Penn Treebank) to 146 tags (C7).\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.38\n\nPOS Tagging Algorithms\n\nFundamentals\nPOS-Tagging generally requires:\nTraining phase where a manually annotated corpus is processed by a machine\n\nlearning algorithm; and a\nTagging algorithm that processes texts using learned parameters.\nPerformance is generally good (around 96%) when staying in the same domain.\n\nAlgorithms used in POS-Tagging\nThere is a multitude of approaches, commonly used are:\n\n\xe2\x80\xa2 Decision Trees\n\xe2\x80\xa2 Hidden Markov Models (HMMs)\n\xe2\x80\xa2 Support Vector Machines (SVM)\n\xe2\x80\xa2 Transformation-based Taggers (e.g., the Brill tagger)\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.39\n\nPOS Tagging in spaCy\n\nimport spacy\n\nnlp = spacy.load("en_core_web_sm")\ndoc = nlp("Apple is looking at buying U.K. startup for $1 billion")\n\nfor token in doc:\nprint(token.text, token.lemma_, token.pos_, token.tag_, token.dep_,\n\ntoken.shape_, token.is_alpha, token.is_stop)\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.40\n\nTagsets\n\nUnderstanding POS Tags\n\n\xe2\x80\xa2 There are different tagsets used by different tools\n\xe2\x80\xa2 spaCy has a built-in explanation method:\n\nspacy.explain("NNP")\n> noun, proper singular\n\n\xe2\x80\xa2 spaCy uses the Universal Dependency Scheme\n(https://universaldependencies.org/u/pos/)\n\n\xe2\x86\x92 Worksheet #8: Task 5\n\nhttps://universaldependencies.org/u/pos/\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.41\n\nSyntax: Chunking and Parsing\n\nFinding Syntactic Structures\nWe can now start a syntactic analysis of a sentence using:\nParsing producing a parse tree for a sentence using a parser, a grammar, and\n\na lexicon\nChunking finding syntactic constituents like Noun Phrases (NPs) or\n\nVerb Groups (VGs) within a sentence\n\nChunking vs. Parsing\nProducing a full parse tree often fails due to grammatical inaccuracies, novel words,\nbad tokenization, wrong sentence splits, errors in POS tagging, . . .\nHence, chunking and partial parsing are more commonly used.\n\nFrom Natural Language Processing with Python, by Steven Bird, Ewan Klein and Edward Loper, Copyright 2019 the authors. It is distributed with the Natural Language Toolkit [http://nltk.org/], Version 3.0, under the terms of the Creative Commons Attribution-Noncommercial-No\nDerivative Works 3.0 United States License [http://creativecommons.org/licenses/by-nc-nd/3.0/us/].\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.42\n\nNoun Phrase Chunking\n\nNP Chunker\nRule-based approach for finding NPs\n\nGrammar Excerpt\n\n(NP (DET MOD HEAD))\n(MOD (MOD-ingredients)\n\n(MOD-ingredients MOD)\n())\n\n(HEAD (NN) . . .)\n\nExample\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.43\n\nNP Chunking in spaCy\n\nimport spacy\n\nnlp = spacy.load("en_core_web_sm")\ndoc = nlp("Autonomous cars shift insurance liability toward manufacturers")\nfor chunk in doc.noun_chunks:\n\nprint(chunk.text, chunk.root.text, chunk.root.dep_,\nchunk.root.head.text)\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.44\n\nChunking vs. Parsing, Round 2\n\nWhat can we do with chunks?\n(NP) chunks are very useful in finding named entities (NEs), e.g., Persons,\nCompanies, Locations, Patents, Organisms, . . ..\n\nBut additional methods are needed for finding relations:\n\xe2\x80\xa2 Who invented X?\n\xe2\x80\xa2 What company created product Y that is doomed to fail?\n\xe2\x80\xa2 Which organism is this protein coming from?\n\nParse trees can help in determining these relationships\nParsing Challenges\nParsing is hard due to many kinds of ambiguities:\nPP-Attachement which NP takes the PP? Compare:\n\nHe ate spaghetti with a fork.\nHe ate spaghetti with tomato sauce.\n\nNP Bracketing plastic cat food can cover\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.45\n\nPOS tags & dependencies\n\ndoc = nlp(u"Apple is looking at buying U.K. startup") \n\nfor token in doc: \n    print(token.text, token.pos_, token.tag_)\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.46\n\nConstituent-based Parse Tree vs. Dependency Parsing\nParsing \xe2\x80\x9cI prefer the morning flight through Denver.\xe2\x80\x9d\n\n[JM], Figure 14.1\xe2\x86\x92 Worksheet #8: Task 6\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.47\n\nNamed Entity Recognition in spaCy\n\nimport spacy\n\nnlp = spacy.load("en_core_web_sm")\ndoc = nlp("Apple is looking at buying U.K. startup for $1 billion")\n\nfor ent in doc.ents:\nprint(ent.text, ent.start_char, ent.end_char, ent.label_)\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.48\n\nEntity Models\n\nWhich entities are detected?\n\n\xe2\x80\xa2 Depends on the model and its training data\n\xe2\x80\xa2 E.g., spaCy trained on the OntoNotes-5.0 corpus\n\n(https://catalog.ldc.upenn.edu/LDC2013T19)\n\n\xe2\x86\x92 Worksheet #8: Task 7\n\nhttps://catalog.ldc.upenn.edu/LDC2013T19\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.49\n\nTo rule or not to rule...\n\nHow to find a new kind of Named Entity (NE)?\nTwo general solutions:\nRule-based: write rules (regular expressions, transducers) that capture as many\n\nvariations as possible, with as few false positives as possible\nMachine learning: train a machine learning model, using manually annotated\n\nexamples (supervised learning)\n\nPros&Cons\n\n\xe2\x80\xa2 Rules can be developed quickly: good for proof-of-concept/demo,\nbootstrapping a ML corpus, easy (unambiguous) patterns\n\n\xe2\x80\xa2 Rules are \xe2\x80\x9cbrittle\xe2\x80\x9d, they do not generalize well\n\xe2\x80\xa2 ML solutions generally perform better (more robust with respect to variations)\n\xe2\x80\xa2 But a ML approach requires significant effort for creating training data, as well\n\nas effort for feature engineering, training, evaluation, etc.\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.50\n\nDeveloping Rules\n\nFinite-state Transducers\nIn NLP, we generally use Finite-state Transducers (FSTs) for processing rules.\n\n\xe2\x80\xa2 Theory: Special kind of finite-state machine with input and output tape\n\xe2\x80\xa2 Practice: Unlike using regular expressions matching only the text, we match a\n\ngraph, formed by the tokens, POS tags, dependency information, etc.\n\n\xe2\x86\x92 Worksheet #8: Task 8\n\n\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.52\n\nEntity Linking\n\nGrounding to a Knowledge Base\nspaCy provides an API for linking entities to a knowledge base, but (currently) no\npre-trained models.\n\nExample Pipeline\nSee some experimental development code using Wikidata at\nhttps://pypi.org/project/spacy-entity-linker/\n\nimport spacy\nfrom SpacyEntityLinker import EntityLinker\nentityLinker = EntityLinker()\nnlp = spacy.load("en_core_web_sm")\nnlp.add_pipe(entityLinker, last=True, name="entityLinker")\ndoc = nlp("I watched the Pirates of the Carribean last silvester")\n\n#returns all entities in the whole document\nall_linked_entities=doc._.linkedEntities\nfor sent in doc.sents:\n\nsent._.linkedEntities.pretty_print()\n\n#OUTPUT:\n#https://www.wikidata.org/wiki/Q194318 194318\n\nPirates of the Caribbean Series of fantasy adventure films\n#https://www.wikidata.org/wiki/Q12525597 12525597\n\nSilvester the day celebrated on 31 December (Roman Catholic Church) or 2 January (Eastern Orthodox Churches)\n\nhttps://pypi.org/project/spacy-entity-linker/\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.53\n\nPipelines in spaCy\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.54\n\nPipelines in spaCy (contd.)\n\nWorking with pipelines\nLoading a model defines the pipeline to be used in its metadata:\n\n"pipeline": ["tagger", "parser", "ner"]\n\nProcessing a text will then apply each component in the pipeline in turn:\n\ndoc = nlp.make_doc("This is a sentence")\nfor name, proc in nlp.pipeline:\n\ndoc = proc(doc)\n\nYou can disable components you don\xe2\x80\x99t need:\n\nnlp = spacy.load("en_core_web_sm", disable=["parser"])\n\nAnd of course add your own components (here at the end):\n\nnlp.add_pipe(my_component, name="My new component", last=True)\n\nSee https://spacy.io/usage/processing-pipelines\n\nhttps://spacy.io/usage/processing-pipelines\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.55\n\nWriting a spaCy component\n\nA simple \xe2\x80\x9cinfo\xe2\x80\x9d component\n\nimport spacy\n\ndef my_component(doc):\nprint("After tokenization, this doc has {} tokens.".format(len(doc)))\nprint("The part-of-speech tags are:", [token.pos_ for token in doc])\nif len(doc) < 10:\n\nprint("This is a pretty short document.")\nreturn doc\n\nnlp = spacy.load("en_core_web_sm")\nnlp.add_pipe(my_component, name="print_info", last=True)\nprint(nlp.pipe_names)\ndoc = nlp("This is a sentence.")\n\nOutput\n\n[\xe2\x80\x99tagger\xe2\x80\x99, \xe2\x80\x99parser\xe2\x80\x99, \xe2\x80\x99ner\xe2\x80\x99, \xe2\x80\x99print_info\xe2\x80\x99]\nAfter tokenization, this doc has 5 tokens.\nThe part-of-speech tags are: [\xe2\x80\x99DET\xe2\x80\x99, \xe2\x80\x99AUX\xe2\x80\x99, \xe2\x80\x99DET\xe2\x80\x99, \xe2\x80\x99NOUN\xe2\x80\x99, \xe2\x80\x99PUNCT\xe2\x80\x99]\nThis is a pretty short document.\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.56\n\nSummary: spaCy Architecture\n\nhttps://spacy.io/usage/spacy- 101#architecture\n\nhttps://spacy.io/usage/spacy-101#architecture\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.57\n\nOutline\n\n1 Introduction\n\n2 Natural Language Processing (NLP)\n\n3 Text Mining\nExample: Scientific Literature Mining\nSummary\n\n4 Notes and Further Reading\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.58\n\nText Mining Biomedical Literature for Protein Mutations\n\nExcerpts from PubMed journal PMID:14592457\n\n. . . glutathione S-transferase (GST) fusion proteins in Escherichia\ncoli and purified by GSH\xe2\x80\x93agarose affinity chromatography. Mutant\nQ15K-W37R and mutant Q15R-W37R showed comparable activ-\nity for NAD and NADP with an increase in activity nearly 3fold over\nthat of the wild type.\n\n(Orange: Mutation, Red: Enzyme, Blue: Organism, Violet: Impact expression,\nPurple: Protein property, Green: Physical quantity)\n\nWhat we are looking for?\n\nImpact Mutant Q15K-W37R and mutant Q15R-W37R showed. . .\nan increase in activity 3fold over that of the wild type.\n\nOrganism Escherichia coli\nMutation Q15K/W37R,Q15R/W37R\nEnzyme glutathione S-transferase (GST)\nProtein property activity\nPhysical Quantity 3fold\nImpact Expression increase\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.59\n\nBRENDA (BRaunschweig ENzyme DAtabase)\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.60\n\nOrganism Entity Detection\n\nOrganism Examples\n\ngenus\xef\xb8\xb7 \xef\xb8\xb8\xef\xb8\xb8 \xef\xb8\xb7\nEmericella\n\nold genus name\xef\xb8\xb7 \xef\xb8\xb8\xef\xb8\xb8 \xef\xb8\xb7\n(Aspergillus)\n\nspecies\xef\xb8\xb7 \xef\xb8\xb8\xef\xb8\xb8 \xef\xb8\xb7\nnidulans\xef\xb8\xb8 \xef\xb8\xb7\xef\xb8\xb7 \xef\xb8\xb8\n\norganism mention\n\ngenus\xef\xb8\xb7 \xef\xb8\xb8\xef\xb8\xb8 \xef\xb8\xb7\nEscherichia\n\nspecies\xef\xb8\xb7\xef\xb8\xb8\xef\xb8\xb8\xef\xb8\xb7\ncoli\n\nstrain\xef\xb8\xb7 \xef\xb8\xb8\xef\xb8\xb8 \xef\xb8\xb7\nXLl-Blue\xef\xb8\xb8 \xef\xb8\xb7\xef\xb8\xb7 \xef\xb8\xb8\n\norganism mention\n\nFinding Organisms: Rule matching\nPriority Pattern\n5 (GENUS) (SPECIES) (SUBSPECIES) (STRAIN)?\n4 (GENUS) ("(")(GENUS)(")") (SPECIES) (STRAINKEYWORD)? (STRAIN) (STRAINKEYWORD)?\n3 (SPECIES) (STRAINKEYWORD) (STRAIN)\n2 (GENUS) (STRAINKEYWORD)? (STRAIN)\n1 (FULLNAME) (STRAINKEYWORD)? (STRAIN) (STRAINKEYWORD)?\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.61\n\nQuery Interface (https://www.semanticsoftware.info/omm-query)\n\xe2\x80\x9cShow me all protein mutations that impacted the protein property affinity\xe2\x80\x9d\n\n[Naderi, Nona (2011) Automated Extraction of Protein Mutation Impacts from the Biomedical\nLiterature. Masters thesis, Concordia University. https://spectrum.library.concordia.ca/35931/]\n\nhttps://www.semanticsoftware.info/omm-query\nhttps://spectrum.library.concordia.ca/35931/\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.62\n\nSummary\n\nBuilding a text mining system\n\n\xe2\x80\xa2 We have mature tools&resources to build robust, scalable systems now\n\xe2\x80\xa2 Prototyping a basic system demo can be done \xe2\x80\x9cin hours\xe2\x80\x9d\n\xe2\x80\xa2 Of course, some tasks are still complex R&D problems\n\xe2\x80\xa2 Cloud APIs are another option (convenient, but added cost and confidentiality\n\nconcerns)\n\xe2\x80\xa2 Many businesses are still not aware of the potentials in analyzing their\n\ndocuments\n\nKnowledge Worker DocumentsNLP Pipeline\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.63\n\nOutline\n\n1 Introduction\n\n2 Natural Language Processing (NLP)\n\n3 Text Mining\n\n4 Notes and Further Reading\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.64\n\nReading Material\n\nRequired\n\n\xe2\x80\xa2 [LHH19, Chapter 11] (Information extraction)\n\nSupplemental\n\n\xe2\x80\xa2 [PS12, Chapter 6] (Annotation and Adjudication)\n\xe2\x80\xa2 [JM, Chapter 14] (Dependency Parsing)\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nText Mining in Science\n\nText Mining Applications\n\nLanguage Technology (LT)\n\nDevelopment Frameworks\n\nExample GATE Pipeline\n\nNLP\nLanguage Models\n\nTokenization\n\nSentence Splitting\n\nMorphology\n\nPart-of-Speech (POS)\nTagging\n\nChunking and Parsing\n\nNamed Entity Recognition\n\nEntity Linking\n\nPipelines\n\nText Mining\nExample: Scientific\nLiterature Mining\n\nSummary\n\nNotes and Further\nReading\n\n9.65\n\nReferences\n\n[JM] Daniel Jurafsky and James H. Martin.\nSpeech and Language Processing.\nThird Edition draft, December 30, 2020.\nhttps://web.stanford.edu/~jurafsky/slp3/.\n\n[LHH19] Hobson Lane, Cole Howard, and Hannes Max Hapke.\nNatural Language Processing in Action.\nManning Publications Co., 2019.\nhttps://concordiauniversity.on.worldcat.org/oclc/1102387045.\n\n[PS12] James Pustejovsky and Amber Stubbs.\nNatural Language Annotation for Machine Learning.\nO\xe2\x80\x99Reilly, 2012.\nhttps://concordiauniversity.on.worldcat.org/oclc/801812987.\n\nhttps://web.stanford.edu/~jurafsky/slp3/\nhttps://concordiauniversity.on.worldcat.org/oclc/1102387045\nhttps://concordiauniversity.on.worldcat.org/oclc/801812987\n\n\tText Mining\n\tIntroduction\n\tText Mining in Science\n\tText Mining Applications\n\tLanguage Technology (LT)\n\tDevelopment Frameworks\n\tExample GATE Pipeline\n\n\tNatural Language Processing (NLP)\n\tLanguage Models\n\tTokenization\n\tSentence Splitting\n\tMorphology\n\tPart-of-Speech (POS) Tagging\n\tChunking and Parsing\n\tNamed Entity Recognition\n\tEntity Linking\n\tPipelines\n\n\tText Mining\n\tExample: Scientific Literature Mining\n\tSummary\n\n\tNotes and Further Reading\n\n\n'