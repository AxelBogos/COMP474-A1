b'Microsoft PowerPoint - DB4.ppt [Compatibility Mode]1COMP 353 DatabasesDesign Theory for Relational Databases Functional DependenciesSchema Refinement (Decomposition)Normal Forms1Functional Dependencies (FDs)\xef\xbf\xbd A functional dependency (FD) is a  kind of constraint\xef\xbf\xbd Suppose R is a relation schema and X,Y \xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86 R.A FD on R is a statement of the form X \xe2\x86\x92 Y, which asserts: \xe2\x80\x9cFor every \xe2\x80\x9clegal/valid\xe2\x80\x9d instance r of R, and for all pairs of tuples t1 and t2 in r, if t1 and t2 agree on the values in X, then t1 and t2 agree also on the values in Y.\xe2\x80\x9d In symbols: \xe2\x88\x80\xe2\x88\x80\xe2\x88\x80\xe2\x88\x80 t1,t2 \xe2\x88\x88\xe2\x88\x88\xe2\x88\x88\xe2\x88\x88 r:  t1[X] = t2[X] \xef\xbf\xbd t1[Y] = t2[Y]. \xef\xbf\xbd We read X \xe2\x86\x92 Y as:X (functionally) determines Y (or Y is determined by X)\xef\xbf\xbd We say that the FD: X \xe2\x86\x92 Y is relevant to R if XUY \xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86 R.2Functional Dependencies\xef\xbf\xbd Consider the relation schema:Star (name, SIN, street, city, postalCode, phone)\xef\xbf\xbd Since we know the semantics of this relation from the design phase, we can answer the following question:\xef\xbf\xbd What are the functional dependencies on Star?\xef\xbf\xbd Note that in general, FDs on  a relation R may not be determined based on a given instance of R!3Functional Dependencies\xef\xbf\xbd Consider the relation:Movie (title, year, length, filmType)\xef\xbf\xbd What are the FD\xe2\x80\x99s on the Movie relation?We use the semantics of this relation to answer.4Keys\xef\xbf\xbd The concept of FD generalizez the concept of  key. How?\xef\xbf\xbd Let X \xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86 R. Then X is a key of R iff X \xe2\x86\x92 R\xef\xbf\xbd X is a (candidate) key of R (or a key, for short) if1. X \xe2\x86\x92 R. That is, attributes in X functionally determine all the attributes of R2. No proper subset of X is key, i.e., a candidate  key must be minimal\xef\xbf\xbd Is {title, year, filmType} a key for relation Movie?\xef\xbf\xbd A set of attributes that contains a key is called a superkey (that is, a superset of a key)\xef\xbf\xbd Note that every key is a superkey, but not vice versa5Functional Dependencies\xef\xbf\xbd X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y is called a functional dependencybecause, in principle, there is a function that takes a list of values, one for each attribute in X, and returns at most one value (i.e., a unique value or no value at all) for the attributes in Y62Functional Dependencies\xef\xbf\xbd Consider the relation: Movie (title, year, length, filmType, studioName, starName)\xef\xbf\xbd What are the functional dependencies?{title, year} \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 length{title, year} \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 filmType{title, year} \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 studioName\xef\xbf\xbd {title, year} \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 {length, filmType, studioName}Note: {title, year} \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 starName does not hold\xef\xbf\xbd What is the key of the Movie relation? 7Trivial FD\xe2\x80\x99s\xef\xbf\xbd An FD X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y is said to be trivial if Y \xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86 X.\xef\xbf\xbd For example: {title, year} \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 title is a trivial FD\xef\xbf\xbd Otherwise, the FD is called nontrivial\xef\xbf\xbd For example: {title, year} \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 length is a nontrivial FD8Functional Dependencies\xef\xbf\xbdWhy are we interested in functional dependencies?9Redundancy Problem\xef\xbf\xbd Redundancy \xe2\x80\x93 a \xe2\x80\x9cpiece\xe2\x80\x9d of information is unnecessarily repeated in different tuples in a relation\xef\xbf\xbd Recall that redundancy is the main source of problems: \xef\xbf\xbd Storage waste\xe2\x80\xa2 Some information stored repeatedly \xef\xbf\xbd Update anomalies\xe2\x80\xa2 If a copy of such information is updated, an inconsistency may arise unless all its copies are updated\xef\xbf\xbd Insertion anomalies\xe2\x80\xa2 Unless we allow nulls, it may not be possible to store some information unless we have all the information to store\xef\xbf\xbd Deletion anomalies \xe2\x80\xa2 Deleting some information may results in loosing some other information (which we don\xe2\x80\x99t want to loose)10Is this a good design for relation R?Name                   SSN                    PhoneFred                  123-321-99            (201)  555-1234Fred                  123-321-99            (201)  572-4312Joe                    909-438-44           (908)  464-0028Mary                  938-401-54           (201)  555-1234The only FD on R is:  SSN\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbdNameTherefore, the only key of R is:  {SSN, Phone}11What about this design, replacing R with R1 and R2?SSN                  Name123-321-99          Fred909-438-44          JoeSSN                     Phone123-321-99                (201)  555-123412D = {R1(SSN, Name), R2(SSN, Phone)}R1R2123-321-99               (201)  572- 4312909-438-44               (908)  464-0028938-401-54 (201) 555-1234FD\xe2\x80\x99s on R1 and R2?938-401-54          Mary3Another ExampleName Address RepresentingFirm SpokesPerson Carrie Fisher 123 Maple Star One Joe SmithHarrison Ford 789 Palm rd. Star One Joe SmithMark Hamill 456 Oak rd. Movies & Co Mary Johns Entity Set:Relation Instance:Relation Schema:Star (Name, Address, RepresentingFirm,SpokesPerson)\xef\xbf\xbd Suppose each star has a representing firm and each firm has one spokes person) StarsSpokesPersonRepresentingFirmName AddressRepresentingFirm\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92SpokesPerson13Redundancy ProblemWhat is the role of FDs in detecting redundancy?\xef\xbf\xbd Consider the relation scheme R(A, B, C)\xe2\x80\xa2 Suppose no (nontrivial) FD holds on R\xe2\x80\xa2 There is no redundancy in any instance r of R.\xe2\x80\xa2 Now suppose FD:  A \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 B holds on R\xe2\x80\xa2 If several tuples have the same A value \xef\xbf\xbd they must all have the same B value; otherwise this FD is violated\xef\xbf\xbd Presence of some FDs in a relation suggests possibility of redundancy14Implications of FDs and Reasoning\xef\xbf\xbd Consider relation R(A, B,C) with the set of FDs:  F = {A\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92B, B\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92C}\xef\xbf\xbd We can deduce from F that A\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92C also holds on R. How?  Apply the definition\xe2\x80\xa6\xef\xbf\xbd To detect possible data redundancy, is it necessaryto consider \xe2\x80\x9call\xe2\x80\x9d the FDs (implicit and explicit)?\xef\xbf\xbd As shown above, there might be some additional hidden  (nontrivial) FDs \xe2\x80\x9cimplied\xe2\x80\x9d by a given set of FD\xe2\x80\x99s15Implications of FDs\xef\xbf\xbd Defn: If a relation instance  r satisfies every FD in a given set F of FD\xe2\x80\x99s, then we say that r satisfies F. \xef\xbf\xbd In this case, we also say that r is a legal/valid instance.\xef\xbf\xbd Given <R,F>, we say that F implies a FD X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y, if everyinstance r of R that satisfies F also satisfies X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y.Formally, we express this as: F \xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8 X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y.We may also say that X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y follows from F.\xef\xbf\xbd To show F \xe2\x8a\xad\xe2\x8a\xad\xe2\x8a\xad\xe2\x8a\xad X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y, we may give a counter-example, i.e., an instance r of R that satisfies F but not X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y.16FDs Implication (Cont\xe2\x80\x99d)\xef\xbf\xbd Consider R(A1,A2,A3,A4,A5) with FDs:F = { A1 \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 A2, A2 \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 A3, A2A3 \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 A4, A2A3A4 \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 A5 }Prove that F\xe2\x8a\xad A5 \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 A1Solution method: Provide a counter-example; give a relation instance r of R that satisfies every FD in F but not A5 \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 A1A desired instance r of R:A1 A2  A3 A4 A5t1: 0    1    1    1    1t2: 1    1    1     1    117Closure of a set F of FDs\xef\xbf\xbd Defn: The closure of F, denoted by F+, is the set of every FD: X\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y that is implied by F.\xef\xbf\xbd How can we determine F+?\xef\xbf\xbd Clearly, F+ includes F and  possibly some more FDs\xef\xbf\xbd To answer the question we need to reason about FDs184Equivalence of two sets of FD\xe2\x80\x99s\xef\xbf\xbd Let R be a relation schema, and S, T be sets of FDs on R.\xef\xbf\xbd Defn: we say S covers T (S \xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8T) if for every instance r of R, whenever r satisfies (every FD in) S, r also satisfies T.\xef\xbf\xbd Defn: T and S are equivalent (S \xe2\x89\xa1 T) iff S \xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8T and T\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8S.\xef\xbf\xbd Note: F and F+ are equivalent.Example: Suppose R = {A,B,C}, andS = {A \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 B, B \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 C, A \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 C}T = {A \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 B, B \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 C}  We can show that S \xe2\x89\xa1 T. 19Armstrong\xe2\x80\x99s Axioms [1974]\xef\xbf\xbd R is a relation schema, and X, Y, Z are subsets of R. \xef\xbf\xbd Reflexivity \xef\xbf\xbd If Y \xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86 X, then X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y (trivial FDs)\xef\xbf\xbd Augmentation\xef\xbf\xbd If X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y, then XZ \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 YZ,  for every Z\xef\xbf\xbd Transitivity\xef\xbf\xbd If X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y and Y \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Z, then X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Z\xef\xbf\xbd These are sound and complete inference rules for FDs 20Additional rules / axiomsOther useful rules that follow from Armstrong Axioms:Suppose X, Y, Z, and W are sets of attributes.\xef\xbf\xbd Union (Combining) Rule\xef\xbf\xbd If X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y and X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Z, then X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 YZ\xef\xbf\xbd Decomposition (Splitting) Rule\xef\xbf\xbd If X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 YZ, then X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y and X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Z\xef\xbf\xbd Pseudotransitivity Rule\xef\xbf\xbd If X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y and WY \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Z, then XW \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Z21Example \xe2\x80\x93 Discovering hidden FD\xe2\x80\x99s\xef\xbf\xbd Consider R = {A, B, C, G, H, I} with the FDs:F = { A \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 B, A \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 C, CG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 H, CG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 I, B \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 H }\xef\xbf\xbd Using Armstrong\xe2\x80\x99s rules, we can derive more FDs \xef\xbf\xbd Since A \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 B and B \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 H, then A \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 H, by transitivity\xef\xbf\xbd Since CG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 H and CG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 I, then CG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 HI, by union\xef\xbf\xbd Since A \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 C then AG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 CG, by augmentationNow, since AG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 CG and CG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 I, then AG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 I, by transitivity (and in a similar way, we get F \xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8 AG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 H)\xef\xbf\xbd Many trivial dependencies can be derived(!) by augmentation22Implication Problem\xef\xbf\xbd Given a set F of FDs, does X  \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y follow from F?\xef\xbf\xbd In other words: is X  \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y in the closure of F?(In symbols, does F\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8 X\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92Y hold, or is X\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92Y\xe2\x88\x8a\xe2\x88\x8a\xe2\x88\x8a\xe2\x88\x8a F+ true?\xef\xbf\xbd How to answer this question?\xef\xbf\xbd Compute the closure of F & check if it includes X\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92Y\xef\xbf\xbd What is the problem with this approach?\xef\xbf\xbd Computing F+ is expensive! Is there a better solution?23Closure of a Set of Attributes\xef\xbf\xbd Given <R, F>; Let X \xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86 R.The closure of X under F is the set of all attributes Y in Rthat are determined by X. This yields X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y, i.e., every  valid instance of R (that satisfies F) also satisfies X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y\xef\xbf\xbd We denote the closure of a set of attributes X under F by X+F\xe2\x80\xa2 When F is known , we simply write X+  (and omit F)\xe2\x80\xa2 Closure of {A1, A2, \xe2\x80\xa6, An} is denoted {A1, A2, \xe2\x80\xa6, An}+\xef\xbf\xbd Note that X \xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86 X+, for any set X of attributes (because X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 X)245Computing the Closure of Attributes\xef\xbf\xbd Given a set F of FD\xe2\x80\x99s and a set X of attributes, how to compute the closure of X w.r.t. F?\xef\xbf\xbd Starting with set X+=X, we repeatedly expand X+ by adding the RHS Z for every FD: W\xef\xbf\xbdZ in F, if the LHD W is already in X+. \xef\xbf\xbd This process terminates when X+ could not be expanded further.\xef\xbf\xbd This process is expressed as an algorithm in the next slide.25An Algorithm to Compute X+ under FX + \xe2\x86\x90\xe2\x86\x90\xe2\x86\x90\xe2\x86\x90 X (initialization step)repeatfor each FD W \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Z in F do:if W \xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86 X+  thenX + \xe2\x86\x90\xe2\x86\x90\xe2\x86\x90\xe2\x86\x90 X + \xe2\x88\xaa\xe2\x88\xaa\xe2\x88\xaa\xe2\x88\xaa Z         // add Z to the resultuntil X+ does not changeComplexity? In the worst case, how many times the \xe2\x80\x9crepeat\xe2\x80\x9d statement may be executed?26Examples\xef\xbf\xbd Consider a relation schema R = { A, B, C, D, E, H } with the FD\xe2\x80\x99s F = { AB \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 C, BC \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 AD, D \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 E, CH \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 B }\xef\xbf\xbd Suppose X={A,B}. Compute X+\xef\xbf\xbd Execution result at each iteration:\xef\xbf\xbd Initially, X+ = {A, B}\xef\xbf\xbd Using AB \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 C, we get X+ = {A, B, C}\xef\xbf\xbd Using BC \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 AD, we get X+ = {A, B, C, D}\xef\xbf\xbd Using D \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 E, we get X+ = {A, B, C,D, E}\xef\xbf\xbd No more change to X+ is possible.  \xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd X+ = {A, B}+ = {A, B, C, D, E}\xef\xbf\xbd Does the order in which FD\xe2\x80\x99s appear in F affects the computation?27Implication Problem Revisited\xef\xbf\xbd Given a set of FD\xe2\x80\x99s F, does an FD: X  \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y follow from F?\xef\xbf\xbd That is, is FD X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y in F+?\xef\xbf\xbd To answer this, we can compute X+ under F, and check if Y is in X+ or not\xe2\x80\xa2 If yes, then the answer is positive! (F\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8 X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y  \xe2\x98\xba\xe2\x98\xba\xe2\x98\xba\xe2\x98\xba)\xe2\x80\xa2 Otherwise, it is negative (F\xe2\x8a\xad\xe2\x8a\xad\xe2\x8a\xad\xe2\x8a\xad X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y \xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd)28Example\xef\xbf\xbd Consider <R,F> where R = { A, B, C, D, E, H } andF = { AB \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 C, BC \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 AD, D \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 E, CH \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 B }\xef\xbf\xbd Does AB \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 D follow from F?\xef\xbf\xbd Two steps:1. Compute {A, B}+ = {A, B, C, D, E}2. Check if D \xe2\x88\x88\xe2\x88\x88\xe2\x88\x88\xe2\x88\x88 {A,B}+\xef\xbf\xbd So, here we conclude that AB \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 D is implied by F29Example\xef\xbf\xbd Consider a relation schema R = { A, B, C, D, E, H } with FDs:  F = { AB \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 C, BC \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 AD, D \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 E, CH \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 B }\xef\xbf\xbd True/False: Does D \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 A follow from F?\xef\xbf\xbd Two steps:1. Compute X+ = {D}+ = {D, E}2. Check if A \xe2\x88\x88\xe2\x88\x88\xe2\x88\x88\xe2\x88\x88 X+\xef\xbf\xbd Since A \xe2\x88\x89\xe2\x88\x89\xe2\x88\x89\xe2\x88\x89 {D, E}, the answer is NO, i.e., F\xe2\x8a\xad\xe2\x8a\xad\xe2\x8a\xad\xe2\x8a\xad D \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 A306Closures and Keys\xef\xbf\xbd Consider a case where X+ includes all the attributes of a relation R\xef\xbf\xbd Clearly, X is a (super) key of R\xef\xbf\xbdTo check if X is a candidate key of R, we should check 2 things: 1. If X+ is a superkey R, i.e., when X+ = R, and 2. If no proper subset of X is a key, i.e., \xe2\x88\x80\xe2\x88\x80\xe2\x88\x80\xe2\x88\x80A\xe2\x88\x88\xe2\x88\x88\xe2\x88\x88\xe2\x88\x88X: (X\xe2\x80\x93{A})+ \xe2\x89\xa0\xe2\x89\xa0\xe2\x89\xa0\xe2\x89\xa0 R\xef\xbf\xbd To find the keys of a relation, we can use the algorithm on slide 26\xef\xbf\xbd This would be exponential in the number of attributes! Can do better?\xef\xbf\xbd Knowledge about keys is essential to understand \xe2\x80\x9cNormal forms.\xe2\x80\x9d31'