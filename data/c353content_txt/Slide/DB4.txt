b'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMicrosoft PowerPoint - DB4.ppt [Compatibility Mode]\n\n\n1\n\nCOMP 353 Databases\n\nDesign Theory for Relational Databases \n\nFunctional Dependencies\n\nSchema Refinement (Decomposition)\n\nNormal Forms\n\n1\n\nFunctional Dependencies (FDs)\n\n\xef\xbf\xbd A functional dependency (FD) is a  kind of constraint\n\n\xef\xbf\xbd Suppose R is a relation schema and X,Y \xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86 R.\n\nA FD on R is a statement of the form X \xe2\x86\x92 Y, which asserts: \n\n\xe2\x80\x9cFor every \xe2\x80\x9clegal/valid\xe2\x80\x9d instance r of R, and for all pairs of \n\ntuples t1 and t2 in r, if t1 and t2 agree on the values in X, \n\nthen t1 and t2 agree also on the values in Y.\xe2\x80\x9d \n\nIn symbols: \xe2\x88\x80\xe2\x88\x80\xe2\x88\x80\xe2\x88\x80 t1,t2 \xe2\x88\x88\xe2\x88\x88\xe2\x88\x88\xe2\x88\x88 r:  t1[X] = t2[X] \xef\xbf\xbd t1[Y] = t2[Y]. \n\n\xef\xbf\xbd We read X \xe2\x86\x92 Y as:\n\nX (functionally) determines Y (or Y is determined by X)\n\n\xef\xbf\xbd We say that the FD: X \xe2\x86\x92 Y is relevant to R if XUY \xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86 R.\n2\n\nFunctional Dependencies\n\n\xef\xbf\xbd Consider the relation schema:\n\nStar (name, SIN, street, city, postalCode, phone)\n\n\xef\xbf\xbd Since we know the semantics of this relation from the \n\ndesign phase, we can answer the following question:\n\n\xef\xbf\xbd What are the functional dependencies on Star?\n\n\xef\xbf\xbd Note that in general, FDs on  a relation R may not be \n\ndetermined based on a given instance of R!\n\n3\n\nFunctional Dependencies\n\n\xef\xbf\xbd Consider the relation:\n\nMovie (title, year, length, filmType)\n\n\xef\xbf\xbd What are the FD\xe2\x80\x99s on the Movie relation?\n\nWe use the semantics of this relation to answer.\n\n4\n\nKeys\n\xef\xbf\xbd The concept of FD generalizez the concept of  key. How?\n\n\xef\xbf\xbd Let X \xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86 R. Then X is a key of R iff X \xe2\x86\x92 R\n\n\xef\xbf\xbd X is a (candidate) key of R (or a key, for short) if\n1. X \xe2\x86\x92 R. That is, attributes in X functionally determine all the \n\nattributes of R\n\n2. No proper subset of X is key, i.e., a candidate  key must be \nminimal\n\n\xef\xbf\xbd Is {title, year, filmType} a key for relation Movie?\n\n\xef\xbf\xbd A set of attributes that contains a key is called a superkey \n(that is, a superset of a key)\n\xef\xbf\xbd Note that every key is a superkey, but not vice versa\n\n5\n\nFunctional Dependencies\n\n\xef\xbf\xbd X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y is called a functional dependency\nbecause, in principle, there is a function that takes \na list of values, one for each attribute in X, and \nreturns at most one value (i.e., a unique value or \nno value at all) for the attributes in Y\n\n6\n\n\n\n2\n\nFunctional Dependencies\n\n\xef\xbf\xbd Consider the relation: \n\nMovie (title, year, length, filmType, studioName, starName)\n\n\xef\xbf\xbd What are the functional dependencies?\n\n{title, year} \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 length\n\n{title, year} \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 filmType\n\n{title, year} \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 studioName\n\n\xef\xbf\xbd {title, year} \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 {length, filmType, studioName}\n\nNote: {title, year} \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 starName does not hold\n\n\xef\xbf\xbd What is the key of the Movie relation? 7\n\nTrivial FD\xe2\x80\x99s\n\n\xef\xbf\xbd An FD X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y is said to be trivial if Y \xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86 X.\n\n\xef\xbf\xbd For example: {title, year} \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 title is a trivial FD\n\n\xef\xbf\xbd Otherwise, the FD is called nontrivial\n\n\xef\xbf\xbd For example: {title, year} \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 length is a nontrivial FD\n\n8\n\nFunctional Dependencies\n\n\xef\xbf\xbdWhy are we interested in \n\nfunctional dependencies?\n\n9\n\nRedundancy Problem\n\n\xef\xbf\xbd Redundancy \xe2\x80\x93 a \xe2\x80\x9cpiece\xe2\x80\x9d of information is unnecessarily \nrepeated in different tuples in a relation\n\n\xef\xbf\xbd Recall that redundancy is the main source of problems: \n\xef\xbf\xbd Storage waste\n\n\xe2\x80\xa2 Some information stored repeatedly \n\n\xef\xbf\xbd Update anomalies\n\xe2\x80\xa2 If a copy of such information is updated, an inconsistency may arise unless \n\nall its copies are updated\n\n\xef\xbf\xbd Insertion anomalies\n\xe2\x80\xa2 Unless we allow nulls, it may not be possible to store some information \n\nunless we have all the information to store\n\n\xef\xbf\xbd Deletion anomalies \n\xe2\x80\xa2 Deleting some information may results in loosing some other information \n\n(which we don\xe2\x80\x99t want to loose)\n10\n\nIs this a good design for relation R?\n\nName                   SSN                    Phone\n\nFred                  123-321-99            (201)  555-1234\n\nFred                  123-321-99            (201)  572-4312\n\nJoe                    909-438-44           (908)  464-0028\n\nMary                  938-401-54           (201)  555-1234\n\nThe only FD on R is:  SSN\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbdName\n\nTherefore, the only key of R is:  {SSN, Phone}\n\n11\n\nWhat about this design, replacing R with R1 and R2?\n\nSSN                  Name\n\n123-321-99          Fred\n909-438-44          Joe\n\nSSN                     Phone\n\n123-321-99                (201)  555-1234\n\n12\n\nD = {R1(SSN, Name), \n\nR2(SSN, Phone)}\n\nR1\n\nR2\n\n123-321-99               (201)  572- 4312\n\n909-438-44               (908)  464-0028\n\n938-401-54 (201) 555-1234\n\nFD\xe2\x80\x99s on R1 and R2?\n\n938-401-54          Mary\n\n\n\n3\n\nAnother Example\n\nName Address RepresentingFirm SpokesPerson \n\nCarrie Fisher 123 Maple Star One Joe Smith\n\nHarrison Ford 789 Palm rd. Star One Joe Smith\n\nMark Hamill 456 Oak rd. Movies & Co Mary Johns \n\nEntity Set:\n\nRelation Instance:\n\nRelation Schema:\n\nStar (Name, Address, \n\nRepresentingFirm,SpokesPerson)\n\n\xef\xbf\xbd Suppose each star has a representing firm and \n\neach firm has one spokes person) \n\nStars\n\nSpokesPersonRepresentingFirm\n\nName Address\n\nRepresentingFirm\n\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\n\nSpokesPerson\n\n13\n\nRedundancy Problem\n\nWhat is the role of FDs in detecting redundancy?\n\n\xef\xbf\xbd Consider the relation scheme R(A, B, C)\n\n\xe2\x80\xa2 Suppose no (nontrivial) FD holds on R\n\n\xe2\x80\xa2 There is no redundancy in any instance r of R.\n\n\xe2\x80\xa2 Now suppose FD:  A \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 B holds on R\n\n\xe2\x80\xa2 If several tuples have the same A value \xef\xbf\xbd they must all \n\nhave the same B value; otherwise this FD is violated\n\n\xef\xbf\xbd Presence of some FDs in a relation suggests possibility of \n\nredundancy\n\n14\n\nImplications of FDs and Reasoning\n\n\xef\xbf\xbd Consider relation R(A, B,C) with the set of FDs:  \n\nF = {A\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92B, B\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92C}\n\n\xef\xbf\xbd We can deduce from F that A\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92C also holds on R. \n\nHow?  Apply the definition\xe2\x80\xa6\n\n\xef\xbf\xbd To detect possible data redundancy, is it necessary\n\nto consider \xe2\x80\x9call\xe2\x80\x9d the FDs (implicit and explicit)?\n\n\xef\xbf\xbd As shown above, there might be some additional hidden  \n\n(nontrivial) FDs \xe2\x80\x9cimplied\xe2\x80\x9d by a given set of FD\xe2\x80\x99s\n\n15\n\nImplications of FDs\n\n\xef\xbf\xbd Defn: If a relation instance  r satisfies every FD in a given \nset F of FD\xe2\x80\x99s, then we say that r satisfies F. \n\xef\xbf\xbd In this case, we also say that r is a legal/valid instance.\n\n\xef\xbf\xbd Given <R,F>, we say that F implies a FD X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y, if every\ninstance r of R that satisfies F also satisfies X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y.\n\nFormally, we express this as: F \xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8 X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y.\n\nWe may also say that X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y follows from F.\n\n\xef\xbf\xbd To show F \xe2\x8a\xad\xe2\x8a\xad\xe2\x8a\xad\xe2\x8a\xad X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y, we may give a counter-\nexample, i.e., an instance r of R that satisfies F but \nnot X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y.\n\n16\n\nFDs Implication (Cont\xe2\x80\x99d)\n\n\xef\xbf\xbd Consider R(A1,A2,A3,A4,A5) with FDs:\n\nF = { A1 \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 A2, A2 \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 A3, A2A3 \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 A4, A2A3A4 \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 A5 }\n\nProve that F\xe2\x8a\xad A5 \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 A1\nSolution method: Provide a counter-example; give a relation \n\ninstance r of R that satisfies every FD in F but not A5 \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 A1\nA desired instance r of R:\n\nA1 A2  A3 A4 A5\nt1: 0    1    1    1    1\n\nt2: 1    1    1     1    1\n\n17\n\nClosure of a set F of FDs\n\n\xef\xbf\xbd Defn: The closure of F, denoted by F+, is the set of \n\nevery FD: X\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y that is implied by F.\n\n\xef\xbf\xbd How can we determine F+?\n\n\xef\xbf\xbd Clearly, F+ includes F and  possibly some more FDs\n\n\xef\xbf\xbd To answer the question we need to reason about FDs\n\n18\n\n\n\n4\n\nEquivalence of two sets of FD\xe2\x80\x99s\n\n\xef\xbf\xbd Let R be a relation schema, and S, T be sets of FDs on R.\n\n\xef\xbf\xbd Defn: we say S covers T (S \xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8T) if for every instance r of \n\nR, whenever r satisfies (every FD in) S, r also satisfies T.\n\n\xef\xbf\xbd Defn: T and S are equivalent (S \xe2\x89\xa1 T) iff S \xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8T and T\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8S.\n\n\xef\xbf\xbd Note: F and F+ are equivalent.\n\nExample: Suppose R = {A,B,C}, and\n\nS = {A \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 B, B \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 C, A \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 C}\n\nT = {A \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 B, B \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 C}  \n\nWe can show that S \xe2\x89\xa1 T. 19\n\nArmstrong\xe2\x80\x99s Axioms [1974]\n\n\xef\xbf\xbd R is a relation schema, and X, Y, Z are subsets of R. \n\n\xef\xbf\xbd Reflexivity \n\n\xef\xbf\xbd If Y \xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86 X, then X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y (trivial FDs)\n\n\xef\xbf\xbd Augmentation\n\n\xef\xbf\xbd If X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y, then XZ \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 YZ,  for every Z\n\n\xef\xbf\xbd Transitivity\n\n\xef\xbf\xbd If X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y and Y \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Z, then X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Z\n\n\xef\xbf\xbd These are sound and complete inference rules for FDs \n\n20\n\nAdditional rules / axioms\n\nOther useful rules that follow from Armstrong Axioms:\n\nSuppose X, Y, Z, and W are sets of attributes.\n\n\xef\xbf\xbd Union (Combining) Rule\n\n\xef\xbf\xbd If X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y and X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Z, then X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 YZ\n\n\xef\xbf\xbd Decomposition (Splitting) Rule\n\n\xef\xbf\xbd If X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 YZ, then X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y and X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Z\n\n\xef\xbf\xbd Pseudotransitivity Rule\n\n\xef\xbf\xbd If X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y and WY \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Z, then XW \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Z\n\n21\n\nExample \xe2\x80\x93 Discovering hidden FD\xe2\x80\x99s\n\n\xef\xbf\xbd Consider R = {A, B, C, G, H, I} with the FDs:\n\nF = { A \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 B, A \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 C, CG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 H, CG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 I, B \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 H }\n\n\xef\xbf\xbd Using Armstrong\xe2\x80\x99s rules, we can derive more FDs \n\n\xef\xbf\xbd Since A \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 B and B \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 H, then A \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 H, by transitivity\n\n\xef\xbf\xbd Since CG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 H and CG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 I, then CG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 HI, by union\n\n\xef\xbf\xbd Since A \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 C then AG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 CG, by augmentation\n\nNow, since AG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 CG and CG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 I, then AG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 I, by \n\ntransitivity (and in a similar way, we get F \xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8 AG \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 H)\n\n\xef\xbf\xbd Many trivial dependencies can be derived(!) by augmentation\n22\n\nImplication Problem\n\n\xef\xbf\xbd Given a set F of FDs, does X  \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y follow from F?\n\n\xef\xbf\xbd In other words: is X  \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y in the closure of F?\n\n(In symbols, does F\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8 X\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92Y hold, or is \n\nX\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92Y\xe2\x88\x8a\xe2\x88\x8a\xe2\x88\x8a\xe2\x88\x8a F+ true?\n\n\xef\xbf\xbd How to answer this question?\n\n\xef\xbf\xbd Compute the closure of F & check if it includes X\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92Y\n\n\xef\xbf\xbd What is the problem with this approach?\n\n\xef\xbf\xbd Computing F+ is expensive! Is there a better solution?\n23\n\nClosure of a Set of Attributes\n\n\xef\xbf\xbd Given <R, F>; Let X \xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86 R.\n\nThe closure of X under F is the set of all attributes Y in R\n\nthat are determined by X. This yields X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y, i.e., every  \n\nvalid instance of R (that satisfies F) also satisfies X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y\n\n\xef\xbf\xbd We denote the closure of a set of attributes X under F by X+F\n\n\xe2\x80\xa2 When F is known , we simply write X+  (and omit F)\n\n\xe2\x80\xa2 Closure of {A1, A2, \xe2\x80\xa6, An} is denoted {A1, A2, \xe2\x80\xa6, An}\n+\n\n\xef\xbf\xbd Note that X \xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86 X+, for any set X of attributes (because X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 X)\n\n24\n\n\n\n5\n\nComputing the Closure of Attributes\n\n\xef\xbf\xbd Given a set F of FD\xe2\x80\x99s and a set X of attributes, how to \n\ncompute the closure of X w.r.t. F?\n\n\xef\xbf\xbd Starting with set X+=X, we repeatedly expand X+ by adding the \n\nRHS Z for every FD: W\xef\xbf\xbdZ in F, if the LHD W is already in X+. \n\n\xef\xbf\xbd This process terminates when X+ could not be expanded further.\n\n\xef\xbf\xbd This process is expressed as an algorithm in the next slide.\n\n25\n\nAn Algorithm to Compute X+ under F\n\nX + \xe2\x86\x90\xe2\x86\x90\xe2\x86\x90\xe2\x86\x90 X (initialization step)\n\nrepeat\n\nfor each FD W \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Z in F do:\n\nif W \xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86\xe2\x8a\x86 X+  then\n\nX + \xe2\x86\x90\xe2\x86\x90\xe2\x86\x90\xe2\x86\x90 X + \xe2\x88\xaa\xe2\x88\xaa\xe2\x88\xaa\xe2\x88\xaa Z         // add Z to the result\n\nuntil X+ does not change\n\nComplexity? In the worst case, how many times the \n\xe2\x80\x9crepeat\xe2\x80\x9d statement may be executed?\n\n26\n\nExamples\n\n\xef\xbf\xbd Consider a relation schema R = { A, B, C, D, E, H } with \nthe FD\xe2\x80\x99s F = { AB \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 C, BC \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 AD, D \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 E, CH \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 B }\n\n\xef\xbf\xbd Suppose X={A,B}. Compute X+\n\n\xef\xbf\xbd Execution result at each iteration:\n\n\xef\xbf\xbd Initially, X+ = {A, B}\n\n\xef\xbf\xbd Using AB \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 C, we get X+ = {A, B, C}\n\n\xef\xbf\xbd Using BC \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 AD, we get X+ = {A, B, C, D}\n\n\xef\xbf\xbd Using D \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 E, we get X+ = {A, B, C,D, E}\n\n\xef\xbf\xbd No more change to X+ is possible.  \n\n\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd X+ = {A, B}+ = {A, B, C, D, E}\n\n\xef\xbf\xbd Does the order in which FD\xe2\x80\x99s appear in F affects the computation?\n\n27\n\nImplication Problem Revisited\n\n\xef\xbf\xbd Given a set of FD\xe2\x80\x99s F, does an FD: X  \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y follow \n\nfrom F?\n\n\xef\xbf\xbd That is, is FD X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y in F+?\n\n\xef\xbf\xbd To answer this, we can compute X+ under F, and \n\ncheck if Y is in X+ or not\n\n\xe2\x80\xa2 If yes, then the answer is positive! (F\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8\xe2\x8a\xa8 X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y  \xe2\x98\xba\xe2\x98\xba\xe2\x98\xba\xe2\x98\xba)\n\n\xe2\x80\xa2 Otherwise, it is negative (F\xe2\x8a\xad\xe2\x8a\xad\xe2\x8a\xad\xe2\x8a\xad X \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 Y \xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd\xef\xbf\xbd)\n\n28\n\nExample\n\n\xef\xbf\xbd Consider <R,F> where R = { A, B, C, D, E, H } and\n\nF = { AB \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 C, BC \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 AD, D \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 E, CH \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 B }\n\n\xef\xbf\xbd Does AB \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 D follow from F?\n\n\xef\xbf\xbd Two steps:\n\n1. Compute {A, B}+ = {A, B, C, D, E}\n\n2. Check if D \xe2\x88\x88\xe2\x88\x88\xe2\x88\x88\xe2\x88\x88 {A,B}+\n\n\xef\xbf\xbd So, here we conclude that AB \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 D is implied by F\n\n29\n\nExample\n\n\xef\xbf\xbd Consider a relation schema R = { A, B, C, D, E, H } with \n\nFDs:  F = { AB \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 C, BC \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 AD, D \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 E, CH \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 B }\n\n\xef\xbf\xbd True/False: Does D \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 A follow from F?\n\n\xef\xbf\xbd Two steps:\n\n1. Compute X+ = {D}+ = {D, E}\n\n2. Check if A \xe2\x88\x88\xe2\x88\x88\xe2\x88\x88\xe2\x88\x88 X+\n\n\xef\xbf\xbd Since A \xe2\x88\x89\xe2\x88\x89\xe2\x88\x89\xe2\x88\x89 {D, E}, the answer is NO, i.e., F\xe2\x8a\xad\xe2\x8a\xad\xe2\x8a\xad\xe2\x8a\xad D \xe2\x86\x92\xe2\x86\x92\xe2\x86\x92\xe2\x86\x92 A\n30\n\n\n\n6\n\nClosures and Keys\n\xef\xbf\xbd Consider a case where X+ includes all the attributes of a relation R\n\n\xef\xbf\xbd Clearly, X is a (super) key of R\n\n\xef\xbf\xbdTo check if X is a candidate key of R, we should check 2 things: \n\n1. If X+ is a superkey R, i.e., when X+ = R, and \n\n2. If no proper subset of X is a key, i.e., \xe2\x88\x80\xe2\x88\x80\xe2\x88\x80\xe2\x88\x80A\xe2\x88\x88\xe2\x88\x88\xe2\x88\x88\xe2\x88\x88X: (X\xe2\x80\x93{A})+ \xe2\x89\xa0\xe2\x89\xa0\xe2\x89\xa0\xe2\x89\xa0 R\n\n\xef\xbf\xbd To find the keys of a relation, we can use the algorithm on slide 26\n\n\xef\xbf\xbd This would be exponential in the number of attributes! Can do better?\n\n\xef\xbf\xbd Knowledge about keys is essential to understand \xe2\x80\x9cNormal forms.\xe2\x80\x9d\n\n31\n\n\n'