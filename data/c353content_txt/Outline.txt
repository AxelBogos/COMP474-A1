b'Concordia University Dept. of Computer Science & Software Engineering Comp353/CC - Databases Summer 2020  Instructor: Khaled Jababo  Lectures:  MoWe 2:45PM - 5:30PM Online  Office Hours: We 5:30PM - 6:30PM Online  Email:  jababo@cse.concordia.ca  Prerequisite: COMP 352 (Data Structures and Algorithms). Follow-Ups:  COMP 451 (DB Design) and SOEN 387 (Web-Based Enterprise Applications Design). Introduction: Database management is more essential today in numerous scientific, engineering, commercial, and business applications. As such, it has evolved from a specialized computer application to a central component of a modern computing environment. In this course, we study fundamental concepts and techniques of database management, focusing more on database design and programming aspects in particular for relational data. Textbook: J.D. Ullman and J. Widom. A First Course in Database Systems,  Prentice Hall, 3rd edition, 2008. Reference: A. Silberschatz, H.F. Korth, and S. Sudershan, Database System Concepts, 6th Edition, McGraw-Hill, 2011. Lecture notes, assignments, projects, and other related materials are (or will be made) available on moodle. Course Description: In this first course in databases, we study concepts and techniques of database design and programming. We begin with basics of the SQL DB language followed by the entity-relationship (E/R) design notation and methodology. We will then introduce functional dependencies (FD\xe2\x80\x99s) and normalization theory for relational database design. We study database query languages and focus on relational algebra, Datalog, and ODL. We return to SQL and learn how to express transactions, views, and various types of integrity constraints, including checks, assertions, and triggers. Lecture notes, assignments, projects, and other course related materials and important announcements will be posted on Moodle. Please check out the \xe2\x80\x9dImportant Dates\xe2\x80\x9d on moodle for a calendar of the course and the due dates. Grading Scheme: The course components and associated grade distributions are as follows.  Components  %   Assignments (4) 16 Projects (2) 24 Quizzes (5) 10 Midterm 20 Final 30 Important note: To pass the course, you need to obtain a passing grade in the projects, the midterm, the final exam, and the total percentage. A passing grade is normally 50%. Also note that there is no priori fixed relationship between the total percentage and the final letter grade assigned, except that a higher percentage is normally assigned a better letter grade.   Course Components (Details): 1. Assignments: There will be 4 assignments of equal weights. While we encourage discussion of course works with fellow students, each student should write his/her solutions to assignments individually and independently. Note that all the course related works, including solutions to assignments and project reports, should be submitted through Moodle only. 2. Quizzes: There will be 5 pop-up quizzes, each worth 2 points. You get 1 for participation in each quiz and 1 for correct answers. 3. Exams: There will be a midterm and a final exam. The midterm will be during the lecture at a defined date later, and the final will be 3 hours and scheduled by the Exam office.  All students are expected to have access to the internet and hardware equipments (computer, webcam, microphone). Also, students are expected to have the ability to do online timed exams. 4. Projects: There will be projects, called Warm-up (6 points) and Main (18 points), explained as follows. a) The Warm-up Project: You will be given a database design together with some queries and transactions for an application which you need to implement and report the results. You will be provided access to the MySQL database management system (DBMS) maintained by the faculty AITS. b) The Main Project: You and your team are required to design a database for a \xe2\x80\x9drealistic\xe2\x80\x9d application and implement the system in MYSQL. Your project report should include details of your design steps from the E/R diagram to the refined and normalized relations. You also need to develop a suitable user interface to facilitate expressing and executing queries and transactions against the database. This would be a two-layer, web-based system using a standard web browser at the client side. The application uses an http server with PHP parser to communicate with the database server. The system is expected to support \xe2\x80\x9crepresentative\xe2\x80\x9d queries and transactions efficiently. In addition to details of your database design and normalization steps, you project report should include queries and transactions expressed against the database and the results produced, it should also include the test data and the SQL scripts developed and used for creating and loading the data in the database. c) Teams: Projects are done in teams, each consisting of exactly 4 students. While each team member takes part in a well defined portion of the project, the entire team is responsible for their project. Each team picks one of the members as the representative to coordinate project-related activities and communications. No later than July 8th, the team representative should send an email to stan@encs.concordia.ca with the following information about the members: First name and Last name, student ID, and the ENCS email account. Also, please provide a \xe2\x80\x9dpassword\xe2\x80\x9d consisting of 8 alpha-numeric characters. This password is used to access your database in MySQL, and should be shared only by the team members to protect your database. d) Project reports and demos: The final project reports are all due on Thursday August 5th at 13:00. Late submission may not be granted. The demo dates for the main project will be during the lab hours on August 5th. Each team will have 15 minutes to demonstrate their working database application system. A schedule for project demos will be posted at the course web page. Graduate Attributes: As part of the curriculum for Computer Science and Software Engineering programs, COMP353 includes materials and exercises related to a number of graduate attributes, which include knowledge and skills identified by the Canadian Engineering Accreditation Board (CEAB) and the Canadian Information Processing Society (CIPS) as being central to the formation of engineers, computer scientists, and information technology professionals. In this regard, the learning objectives of this course are as follows. Learning Objectives: (1) Knowledge base. Conceptual database design: the entity-relationship model; the relational data model and relational algebra: functional dependencies and normalization; the SQL database language for formulating queries and transactions against databases; integrity constraints and triggers; other data models and languages: Datalog and ODL. (2) Design: Develop applications that require elaborated database components. (3) Use of tools: Use of DBMS, database adapters, and use of the PHP scripting language to develop web-based database application systems. (4) Team projects: Team work on development of a web-based application that requires an elaborated database component. Additional Notes: a) Backups: It is highly recommended to make proper backups of all your individual and team works during the semester until the final grades are published. b) Academic Integrity: It is important to be aware and observe the academic integrity and code of conduct. See details in the link provided at the course web page. c) Final Advice: We encourage a collaborative learning in this course, as together we learn more and better. As a closing remark, we recommend to start working on the course materials, assignments, and projects as early as possible! Together with my assistants in this course, we wish you all a successful semester ahead.  Khaled Jababo June 2020'