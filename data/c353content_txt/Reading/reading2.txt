b'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMicrosoft PowerPoint - Tut3.pptx\n\n\nCOMP 353 -\nDatabases\n\n\n\nLast time\xe2\x80\xa6\n\n\xe2\x80\xa2Continued database modifications (DML)\n\n\xe2\x80\xa2 INSERT, DELETE, UPDATE\n\n\xe2\x80\xa2Database definition statements (DDL)\n\n\xe2\x80\xa2CREATE TABLE, ALTER TABLE, DROP TABLE\n\n\n\nTiny pop quiz\n\xe2\x80\xa2How many tuples remain in Hero after the deletion?\n\nDELETE FROM Hero(name, gameTitle, class, level, hitPoints)\n\nWHERE Hero.level <= 1 OR Hero.class = \xe2\x80\x98Thief\xe2\x80\x99 OR Hero.name = \xe2\x80\x98Leon\xe2\x80\x99 ;\n\nname gameTitle class level hitPoints\n\nMario Super Mario 64 Plumber 4 1\n\nLink Legend of Zelda: Wind Waker Warrior 1 3\n\nOlimar Pikmin 2 Thief 2 100\n\nKirby Kirby 64: The Crystal Shards Shapeshifter 5 50\n\nLeon Resident Evil 4 Gunner 3 200\n\nLuigi Luigi\xe2\x80\x99s Mansion Ghostbuster 0 5\n\nLouie Pikmin 2 Assistant 0 100\n\n\n\nQuestions needing answers:\n\xe2\x80\xa2VARCHAR(n) exceeding n: depending on your strictness \nsetting in SQL, either the value is truncated with a warning \nor the transaction is rejected\n\n\xe2\x80\xa2ALTER table to change column type: it can be done, but \ndata can be lost and anything referring to that table may \nstop working as expected\n\nALTER TABLE x ALTER COLUMN y NEW_DATA_TYPE; \n\n\n\nToday\n\n\xe2\x80\xa2Continue E/R diagrams\n\n\xe2\x80\xa2Start how to convert E/R diagram to Relational Model\n\n\xe2\x80\xa2Assignment-oriented practice problem\n\n\n\nCreating E/R diagrams\n\n\n\nInheritance in E/R\n\n\xe2\x80\xa2An entity has whatever attributes and relationships \nany of its components from an isa-hierarchy has\n\n\n\nInheritance in E/R\n\xe2\x80\xa2One side of the triangle is attached to the subclass, and \nthe opposite point is connected to the superclass. Every \nisa relationship is one-one, it\xe2\x80\x99s not necessary to draw the \nmultiplicity arrows.\n\n\xe2\x80\xa2So an entity in the isa\nhierarchy can either be a \nGame, or a \nBoardgameGame, the \nlatter having the \nattributes from both sets\n\n\n\nWeak Entity/Relationship sets\n\n\xe2\x80\xa2The key of a weak entity set is formed from the linked \nstrong entity\xe2\x80\x99s key plus the distinguishing features of \nthe weak entity itself\n\n\n\nWeak Entity vs Referential integrity\n\n\xe2\x80\xa2With referential integrity we are placing a constraint \non the entries to the database: for a tuple to exist \nin the set Hero, it  must refer to some tuple in \nGame or else it cannot be in data\n\n\xe2\x80\xa2Expressed as a foreign key in SQL,\nthe consistency of the DBMS\nprevents the deletion of a tuple in \nuse as a foreign key (DELETE transaction fails if you try)\n\n\n\nConverting E/R diagram to \nrelational database schema \n\n\n\nRelational model terminology\n\n\xe2\x80\xa2Relation schema:\n\xe2\x80\xa2 Relation name and a set of attribute names\n\xe2\x80\xa2 Hero = (name, gameTitle, class, level, hitPoints)\n\n\xe2\x80\xa2Relation instance :\n\xe2\x80\xa2The set of \xe2\x80\x9ccurrent\xe2\x80\x9d tuples\n\n\xe2\x80\xa2Database schema :\n\xe2\x80\xa2A set of relation schemas D = {Hero, Game, Player,\xe2\x80\xa6}\n\n\xe2\x80\xa2Database instance :\n\xe2\x80\xa2Many relation instances (tables) -- one per relation in the \ndatabase schema\n\nname gameTitle class level hitPoints\n\nMario Super Mario 64 Plumber 4 1\n\nLink Legend of Zelda: Wind Waker Warrior 1 3\n\n\n\nConverting entity sets\n\n\xe2\x80\xa2For each strong entity set create a relation with the \nsame name and attributes\n\n\xe2\x80\xa2Game (title, platform, \ngenre, releaseYear)\n\n\xe2\x80\xa2BoardGame (boardSize, \nnumTokens)\n\n\xe2\x80\xa2SuperFanPlayer (username)\n\n\n\nConverting relationships\n\xe2\x80\xa2For each simple relationship set (not weak or isa\nhierarchy relations yet), create a relation (table) with \nthe same name, some of the key attribute(s) of each \nentity set involved in the relationship \n(depending on the multiplicity \nof the relation), and any \nattributes belonging \nto the relation in the \nfirst place.\n\n\n\nConverting relationships: finding the key\n\xe2\x80\xa2If R is a binary relationship between entity sets A and \nB, then the multiplicity of this relationship determines \nthe key of R:\n\n\xe2\x80\xa2If R is M-M, then the keys of A and B together contribute \nto the key of R\n\n\xe2\x80\xa2If R is M-1 from A to B, then the key of A is part of the \nkey of R\n\n\xe2\x80\xa2If R is 1-1, then choose either A or B (but not both) to \ncontribute to the key of R\n\nPlays (title, releaseYear, username, hoursPerWeek)\n\n\n\nConverting weak entity sets and relations\n\n\xe2\x80\xa2The relation/table for the weak entity set W must include \nall the attributes of W as well as the key attributes of the \nstrong entity set(s) to which W is associated. \n\n\xe2\x80\xa2This propagates into any other weak set that is weakly \nrelated to W\n\n\xe2\x80\xa2The weak relation (double diamond) from W to its strong \nset does not need its own table\n\n\xe2\x80\xa2Studios (name, address)\n\n\xe2\x80\xa2Crews (number, name)\n\n\xe2\x80\xa2Sub-Crews (number, crewNumber, name)\n\n\n\nConverting weak entity sets and relations\n\n\xe2\x80\xa2We can now define the relation for Hero :\n\n\xe2\x80\xa2Hero (name, title, \nreleaseYear, class, level, \nhitPoints)\n\n\n\nConverting E/R to relational database schema \n\n\xe2\x80\xa2Good start on the relational schema, next week we will \ncover a few ways to convert the \nisa-hierarchy into relations\n\n\xe2\x80\xa2Hero (name, title, \nreleaseYear, class, level, \nhitPoints)\n\n\xe2\x80\xa2Game (title, platform, \ngenre, releaseYear)\n\n\xe2\x80\xa2BoardGame (boardSize, \nnumTokens)\n\n\xe2\x80\xa2SuperFanPlayer (username)\n\n\xe2\x80\xa2Plays (title, releaseYear, \nusername, hoursPerWeek)\n\n\n\nPractice problems\n\n\xe2\x80\xa2Draw an E/R diagram for a database according to the following \nscenario, then convert your E/R diagram into a relational \ndatabase schema, including keys.\n\n\xe2\x80\xa2Consider an Employee relation with attributes including SIN, \nname, DOB (data of birth), and DID (the ID of the department in \nwhich she/he works). We also have the concepts of supervisor \nand subordinate which we wish to represent in the model. That \nis, each employee has a supervisor to whom she/he reports. \nSubordinate refers to an employee working under some \nsupervisor. Convert this diagram into a relational database \nschema. For each entity or relationship set in the model \n(design), determine which attribute(s) form the key. \n\n\n\nPractice problems\n\n\n\nPractice problems\n\n\xe2\x80\xa2Convert your E/R diagram from the previous question \ninto a relational database schema, including keys.\n\n\xe2\x80\xa2Employee = (SIN, name, DOB, DID)\n\n\xe2\x80\xa2ReportsTo = (SupervisorSIN, SubordinateSIN)\n\n\n\n\xe2\x80\xa2These slides were made referencing the course slides \nfrom Prof Shiri, as well as the textbook: \nA First Course in Database Systems by Ullman and \nWidom, third edition\n\nGood book for practice \nproblems and longer explanations\n\n\n'