b'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.1\n\nLecture 8\nIntelligent Agents\nCOMP 474/6741, Winter 2021\n\nRen\xc3\xa9 Witte\nDepartment of Computer Science\n\nand Software Engineering\nConcordia University\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.2\n\nOutline\n\n1 Introduction\n\n2 Search-Based Bots\n\n3 Pattern-Matching Bots\n\n4 Grounding-Based Bots\n\n5 Chatbot Design\n\n6 Notes and Further Reading\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.3\n\nIntelligent Conversational Agents\n\n\xe2\x80\xa2 A software program that can interpret and\nrespond to statements made by users in a\nnatural language\n\n\xe2\x80\xa2 Different types of chatbots\n\xe2\x80\xa2 Generic vs. Goal-oriented\n\xe2\x80\xa2 Retrieval vs. Generative (Deep Learning)\n\n\xe2\x80\xa2 Similar architecture, different stacks\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.4\n\nSiri (2009)\n\nhttps://tomgruber.org/writing/semtech09.htm\n\nhttps://tomgruber.org/writing/semtech09.htm\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.5\n\nSiri Presentation\n\nhttps://vimeo.com/5424527\n\nhttps://vimeo.com/5424527\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.6\n\nThe Chatbots Landscape\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.7\n\nChatbot Approaches\n\nModern approaches\n\nPattern matching: Regex matching and response templates (canned responses)\nGrounding: Knowledge graphs and inference on those graphs\nSearch: Text retrieval\nGenerative: Statistics and machine learning\n\nHybrid approaches\nUsing multiple (or all four) techniques in one bot\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.8\n\nChatbot Applications\n\nExamples\n\nQuestion answering: Google Search, Alexa, Siri, Watson\nVirtual assistants: Google Assistant, Alexa, Siri, MS paperclip\nConversational: Google Assistant, Google Smart Reply, Mitsuki Bot\nMarketing: Twitter bots, blogger bots, Facebook bots, Google Search, Google\n\nAssistant, Alexa, Allo\nCustomer service: Storefront bots, technical support bots\nCommunity management: Bonusly, Slackbot\nTherapy: Woebot, Wysa, YourDost, Siri, Allo\n\n\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.10\n\nChatbot techniques used for some example applications\n\nCopyright 2019 by Manning Publications Co., [LHH19]\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.11\n\nChatbot recirculating (recurrent) pipeline\n\nCopyright 2019 by Manning Publications Co., [LHH19]\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.12\n\nMarketing Chatbots\n\nBots promoting movies, TV shows, video games, . . .\n\n\xe2\x80\xa2 HBO promoted \xe2\x80\x9cWestworld\xe2\x80\x9d with \xe2\x80\x9cAeden\xe2\x80\x9d\n\xe2\x80\xa2 Sony promoted \xe2\x80\x9cResident Evil\xe2\x80\x9d with \xe2\x80\x9cRed Queen\xe2\x80\x9d\n\xe2\x80\xa2 Disney promoted \xe2\x80\x9cZootopia\xe2\x80\x9d with \xe2\x80\x9cOfficer Judy Hopps\xe2\x80\x9d\n\xe2\x80\xa2 Universal promoted \xe2\x80\x9cUnfriended\xe2\x80\x9d with \xe2\x80\x9cLaura Barnes\xe2\x80\x9d\n\xe2\x80\xa2 Activision promoted \xe2\x80\x9cCall of Duty\xe2\x80\x9d with \xe2\x80\x9cLt. Reyes\xe2\x80\x9d\n\nhttps://venturebeat.com/2016/05/03/call-of-duty-infinite-warfares-first-victory-6m-bot-messages-on-facebook/\n\nhttps://venturebeat.com/2016/05/03/call-of-duty-infinite-warfares-first-victory-6m-bot-messages-on-facebook/\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.13\n\nLeena.ai\nHR chatbot answering employees questions\n\nhttps://techcrunch.com/2018/06/29/leena-ai-builds-hr-chat-bots-to-answer-policy-questions-automatically/\n\nhttps://techcrunch.com/2018/06/29/leena-ai-builds-hr-chat-bots-to-answer-policy-questions-automatically/\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.14\n\nLeena.ai Use Case\n\nhttps://www.youtube.com/watch?v=aiuDC2OSIYE\n\nhttps://www.youtube.com/watch?v=aiuDC2OSIYE\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.15https://inc42.com/buzz/y-combinator-graduate-hrtech-startup-leena-ai-raises-2-mn-seed-fund/\n\nhttps://inc42.com/buzz/y-combinator-graduate-hrtech-startup-leena-ai-raises-2-mn-seed-fund/\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.16\nhttps://www.theguardian.com/technology/2016/jun/28/chatbot-ai-lawyer-donotpay-parking-tickets-london-new-york\n\nhttps://www.theguardian.com/technology/2016/jun/28/chatbot-ai-lawyer-donotpay-parking-tickets-london-new-york\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.17\n\nPerceived Business Benefits\n\n\xe2\x80\xa2 \xe2\x80\x9cTop 5 Emerging Technologies in 2018\xe2\x80\x9d\n(Gartner)\n\n\xe2\x80\xa2 Global Market to reach $1-3B by 2025,\nCAGR of 25-40%\n\n\xe2\x80\xa2 Huge benefits across the value chain:\n\xe2\x80\xa2 Sales & Marketing\n\xe2\x80\xa2 HR & Operations\n\xe2\x80\xa2 Service & Payment\n\xe2\x80\xa2 Retention & Growth\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.18https://techcrunch.com/2021/03/10/heyday-seed-funding-2/\n\nhttps://techcrunch.com/2021/03/10/heyday-seed-funding-2/\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.19\n\nEdubots\n\nhttps://www.edubots.eu\n\n\xe2\x86\x92 Worksheet #7: Task 1\n\nhttps://www.edubots.eu\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.20\n\nOutline\n\n1 Introduction\n\n2 Search-Based Bots\n\n3 Pattern-Matching Bots\n\n4 Grounding-Based Bots\n\n5 Chatbot Design\n\n6 Notes and Further Reading\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.21\n\nBasic approach\n\nInformation Retrieval-based Approach\nGiven a corpus of previously answered questions\n\n\xe2\x80\xa2 Create tf-idf vector of the question\n\xe2\x80\xa2 Compute cosine similarity with either:\n\n\xe2\x80\xa2 tf-idf vectors of answers (if only answers available)\n\xe2\x80\xa2 tf-idf vectors of questions (if question/answer pairs available)\n\nExample Dataset\n1.4 million answered questions from Amazon:\nhttps://jmcauley.ucsd.edu/data/amazon/qa/\n\nhttps://jmcauley.ucsd.edu/data/amazon/qa/\n\n\nQnA Maker (Microsoft)\n\nhttps://www.qnamaker.ai/\n\nhttps://www.qnamaker.ai/\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.23\n\nQnA Maker: Example\n\nhttps://docs.microsoft.com/en-us/azure/cognitive-services/QnAMaker/quickstarts/create-publish-knowledge-base?tabs=v1\n\nhttps://docs.microsoft.com/en-us/azure/cognitive-services/QnAMaker/quickstarts/create-publish-knowledge-base?tabs=v1\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.24\n\nOutline\n\n1 Introduction\n\n2 Search-Based Bots\n\n3 Pattern-Matching Bots\n\n4 Grounding-Based Bots\n\n5 Chatbot Design\n\n6 Notes and Further Reading\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.25\n\nEliza Example\n\nEliza + DOCTOR script\nIf the input sentence is:\n\nI am very unhappy these days.\n\nEliza\xe2\x80\x99s response will be:\nHow long have you been very unhappy these days?\n\nProcessing\nKeyword:\n\nI am\n\nDecomposition pattern:\nI am <whatever>\n\nReassembly Pattern:\nHow long have you been <whatever>?\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.26\n\nPattern-response matching\n\n"(.*)?do you remember (.*)?": [\n"Did you think I would forget $2?",\n"Why do you think I should recall $2 now?",\n"What about $2?",\n"You mentioned $2",\n],\n\n"(.*)?my mother (.*)?": [\n"Who else in your family $2?",\n"Tell me more about your family",\n],\n\n"(.*)?why don\xe2\x80\x99t you (.*)?": [\n"Should you $2 yourself?",\n"Do you believe I don\xe2\x80\x99t $2?",\n"Perhaps I will $2 in good time",\n],\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.27\n\nRegular Expressions\n\nFinite State Machine\nA.k.a deterministic finite automaton (DFA).\n\nCopyright by Dnu72 (https://commons.wikimedia.org/wiki/File:Automata_theory.svg), \xe2\x80\x9cAutomata theory\xe2\x80\x9d, licensed under https://creativecommons.org/licenses/by- sa/3.0/legalcode\n\nhttps://commons.wikimedia.org/wiki/File:Automata_theory.svg\nhttps://creativecommons.org/licenses/by-sa/3.0/legalcode\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.28\n\nRegular Expressions\n\nBasic Concepts (https://en.wikipedia.org/wiki/Regular_expression)\n\nBoolean "or": A vertical bar separates alternatives. For example, gray|grey can match\n\xe2\x80\x9cgray\xe2\x80\x9d or \xe2\x80\x9cgrey\xe2\x80\x9d.\n\nGrouping: Parentheses are used to define the scope and precedence of the operators\n(among other uses). For example, gray|grey and gr(a|e)y are equivalent\npatterns which both describe the set of "gray" or "grey".\n\nQuantification: A quantifier after a token (such as a character) or group specifies how often\nthat a preceding element is allowed to occur:\n\n\xe2\x80\xa2 ? The question mark indicates zero or one occurrences of the preceding\nelement. For example, colou?r matches both "color" and "colour".\n\n\xe2\x80\xa2 * The asterisk indicates zero or more occurrences of the preceding\nelement. For example, ab*c matches "ac", "abc", "abbc", "abbbc", and\nso on.\n\n\xe2\x80\xa2 + The plus sign indicates one or more occurrences of the preceding\nelement. For example, ab+c matches "abc", "abbc", "abbbc", and so on,\nbut not "ac".\n\n\xe2\x80\xa2 {n} The preceding item is matched exactly n times.\n\xe2\x80\xa2 {min,} The preceding item is matched min or more times.\n\xe2\x80\xa2 {min,max} The preceding item is matched at least min times, but not\n\nmore than max times.\n\n\xe2\x86\x92 Worksheet #7: Task 2\n\nhttps://en.wikipedia.org/wiki/Regular_expression)\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.29\n\nArtificial Intelligence Markup Language (AIML)\n\nTowards Chatbot Frameworks\n\n\xe2\x80\xa2 Open standard, started in 1995 by Richard Wallace et al.\n\xe2\x80\xa2 Used in the A.L.I.C.E. chatbot (and many others)\n\xe2\x80\xa2 Using XML-based patterns\n\xe2\x80\xa2 AIML kernel loads patterns and responds when match is found\n\nExample\n\n<category>\n<pattern>HELLO *</pattern>\n<template>Hi, human!</template>\n\n</category>\n<category>\n<pattern>WHAT IS YOUR NAME</pattern>\n<template>I am ConUBot, your helpful assistant.</template>\n\n</category>\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.30\n\nAIML Examples (v2.0)\n\n<?xml version="1.0" encoding="UTF-8"?><aiml version="2.0">\n<category>\n\n<pattern>HI</pattern>\n<template>Hi!</template>\n\n</category>\n\n<category>\n<pattern>[HELLO HI YO YOH YO\xe2\x80\x99]\n\n[ROSA ROSE CHATTY CHATBOT BOT CHATTERBOT]</pattern>\n<template>Hi , How are you?</template>\n\n</category>\n\n<category>\n<pattern>[HELLO HI YO YOH YO\xe2\x80\x99 \xe2\x80\x99SUP SUP OK HEY]\n\n[HAL YOU U YALL Y\xe2\x80\x99ALL YOUS YOUSE]</pattern>\n<template>Good one.</template>\n\n</category>\n</aiml>\n\n(from [LHH19, Chapter 12])\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.31\n\nPython & AIML\n\nPython Implementations\n\n\xe2\x80\xa2 E.g., PyAiml, aiml, aiml_bot\n\xe2\x80\xa2 Support AIML 1.0 only :(\n\n<?xml version="1.0" encoding="UTF-8"?>\n<aiml version="1.0.1">\n<category>\n<pattern>HELLO *</pattern>\n<template>Hi Human!</template>\n\n</category>\n<category>\n<pattern>HELLO TROLL</pattern>\n<template>Good one, human.</template>\n\n</category>\n</aiml>\n\nUsing aiml_bot\n\nimport aiml_bot\nbot = aiml_bot.Bot(learn="conubot.aiml")\n\nIn : bot.respond("Hello Conubot!!!")\nOut: \xe2\x80\x99Hi Human!\xe2\x80\x99\n\nSee https://pypi.org/project/AIML-Bot/\n\nhttps://pypi.org/project/AIML-Bot/\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.32\n\nRandom answers\n\n<?xml version="1.0" encoding="UTF-8"?>\n<aiml version="1.0.1">\n<category>\n<pattern>HELLO *</pattern>\n<template>\n<random>\n<li>Hi Human!</li>\n<li>Hi there!</li>\n<li>Hello!</li>\n\n</random>\n</template>\n\n</category>\n<category>\n<pattern>HELLO TROLL</pattern>\n<template>\n<random>\n<li>Good one, human.</li>\n<li>Clever!</li>\n\n</random>\n</template>\n\n</category>\n</aiml>\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.33\n\nSessions and Predicates\n\n<aiml version="1.0.1" encoding="UTF-8">\n<category>\n\n<pattern>MY DOGS NAME IS *</pattern>\n<template>\n\nThat is interesting that you have a dog\nnamed <set name="dog"><star/></set>\n\n</template>\n</category>\n<category>\n\n<pattern>WHAT IS MY DOGS NAME</pattern>\n<template>\n\nYour dog\xe2\x80\x99s name is <get name="dog"/>.\n</template>\n\n</category>\n</aiml>\n\nExample\nMy dogs name is Max\nThat is interesting that you have a dog named Max\n...\nWhat is my dogs name?\nYour dog\xe2\x80\x99s name is Max.\nhttps://www.devdungeon.com/content/ai-chat-bot-python-aiml#sessions\n\nhttps://www.devdungeon.com/content/ai-chat-bot-python-aiml#sessions\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.34\n\nAIML 2.0 Extensions: Rich media, hyperlinks, ...\n\n<card>\n<image>www.png</image>\n<title>Italian Greyhound</title>\n<subtitle>A very good dog</subtitle>\n<button>\n<text>AIML How-To</text>\n<postback>HOW TO</postback>\n\n</button>\n<button>\n<text>Back To Tour</text>\n<postback>RESUME TOUR</postback>\n\n</button>\n</card>\n\nhttp://www.aiml.foundation/doc.html\n\nhttp://www.aiml.foundation/doc.html\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.35\n\nPandorabots (https://pandorabots.com)\nCloud-based platform for AIML 2.0 bots\n\nhttps://pandorabots.com\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.36\n\nOther bot languages\n\nAPI.ai\nProprietary, intuitive language for dialog specifications\n\n\xe2\x80\xa2 Dialogue history, location and user preferences\n\xe2\x80\xa2 Developed by startup Speaktoit, released as api.ai in 2014\n\nDialogflow\nAPI.ai was bought by Google in 2016 and renamed in 2017 to Dialogflow\n\n\xe2\x80\xa2 Powers Google Assistant and other services\n\napi.ai\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.37\n\nhttps://aws.amazon.com/lex/\n\nhttps://aws.amazon.com/lex/\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.38\n\nManaging State (Context)\n\nCopyright 2019 by Manning Publications Co., [LHH19]\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.39\n\nOutline\n\n1 Introduction\n\n2 Search-Based Bots\n\n3 Pattern-Matching Bots\n\n4 Grounding-Based Bots\nQuestion Classification\nNLP Pipelines\nExample: Watson\n\n5 Chatbot Design\n\n6 Notes and Further Reading\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.40\n\nGrounding\n\nAdding Knowledge\n\n\xe2\x80\xa2 Using a knowledge graph when creating answers\n\xe2\x80\xa2 More scalable than hard-coding every possible answer in patterns\n\nFrom the lab exercises...\n\n1 What is <X>?\nE.g., \xe2\x80\x9cWhat is Concordia University?\xe2\x80\x9d\n\n2 \xe2\x87\x92 query DBpedia to retrieve the rdfs:comment (in the user\xe2\x80\x99s language) of X\nConcordia University (commonly referred to as Concordia) is a public\ncomprehensive university located in Montreal, Quebec, Canada.\nFounded in 1974 following the merger of Loyola College and Sir\nGeorge Williams University, Concordia is one of the three universities\nin Quebec where English is the primary language of instruction.\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.41\n\nQuestion-answering Workflow\n\nCopyright 2013 by Manning Publications Co., [IMF13]\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.42\n\nQuestion Types\n\nClassifying Questions\nDifferent types of questions require different SPARQL query structures (ASK,\nSELECT, using COUNT, etc.)\n\nCopyright 2013 by Manning Publications Co., [IMF13]\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.43\n\nQuestion Types (contd.)\n\nCopyright 2013 by Manning Publications Co., [IMF13]\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.44\n\nQuestion Classification\n\nApplying ML\n\n\xe2\x80\xa2 What we need is a classifier that takes a question as input and returns the type\nas output\n\n\xe2\x80\xa2 This is a typical machine learning problem (supervised learning)\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.45\n\nFeature Extraction\n\nFeature Engineering\nNeed to convert text (here: question) into a feature vector\n\n\xe2\x80\xa2 Could use count or tf-idf vector\n\xe2\x80\xa2 but this results in a high number of dimensions (and possible overfitting)\n\nIdea: Reduce Dimensions\nCan we come up with some other features that can be easily extracted?\n\n\xe2\x80\xa2 Length (in words/characters)?\n\xe2\x80\xa2 Number of words with capital letters?\n\xe2\x80\xa2 Ends with question mark or not?\n\xe2\x80\xa2 Number of nouns/verbs?\n\nChallenge: find features that facilitate classification.\n\n\xe2\x86\x92 Worksheet #7: Tasks 3 & 4\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.46\n\nDimensionality reduction in NLP\n\nSome common strategies\n\nStemming: reduce words to their stem (e.g., students, student \xe2\x87\x92 student)\nStopword removal: remove stop-words (e.g., the, in, an, a, ...)\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.47\n\nExample NLP Pipeline\n\nCopyright 2019 by Manning Publications Co., [LHH19]\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.48\n\nTokenization\n\nTask\n\n\xe2\x80\xa2 Split input stream of characters into individual tokens (words, numbers, etc.)\n\xe2\x80\xa2 Done by a Tokenizer (e.g., the default tokenizer in scikit-learn)\n\nTokenization can be difficult...\nFor example, biomedical documents with complex expressions, chemical formulas,\netc.:\n\n\xe2\x80\xa2 1,4-\xce\xb2-xylanase II from Trichoderma reesei\n\xe2\x80\xa2 When N-formyl-L-methionyl-L-leucyl-L-phenylalanine (fMLP) was injected. . .\n\xe2\x80\xa2 Technetium-99m-CDO-MeB [Bis[1,2-cyclohexanedione-dioximato(1-\n\n)-O]-[1,2-cyclohexanedione dioximato(2-)-O]\nmethyl-borato(2-)-N,N\xe2\x80\xb2,N\xe2\x80\xb2\xe2\x80\xb2,N\xe2\x80\xb2\xe2\x80\xb2\xe2\x80\xb2,N\xe2\x80\xb2\xe2\x80\xb2\xe2\x80\xb2\xe2\x80\xb2,N\xe2\x80\xb2\xe2\x80\xb2\xe2\x80\xb2\xe2\x80\xb2\xe2\x80\xb2)-chlorotechnetium) belongs to a family\nof compounds. . .\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.49\n\nPart-of-Speech (POS) Tagging and Parsing\n\nPOS Tagging\nAssign a POS tag (e.g., Noun, Verb, Adjective, Adverb, ...) to each Token:\n\nThe/DT big/ADJ dog/NN\n\nCan be done reliably, available in NLP libraries (e.g, spaCy or NLTK for Python).\n\nParsing\nCreate a tree representing a sentence\xe2\x80\x99s grammatical structure\n\nYou can then extract subject or object, e.g., to use in a SPARQL query.\n\xe2\x86\x92 Worksheet #7: Task 5\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.50\n\nGeneric SPARQL Query Generator\n\nUnger C, B\xc3\xbchmann L, Lehmann J, Ngonga Ngomo AC, Gerber D, Cimiano P. Template-based question\nanswering over RDF data. In Proceedings of the 21st international conference on World Wide Web 2012\nApr 16 (pp. 639-648).\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.51\n\nGenerating SPARQL Queries (I)\n\nSteinmetz N, Arning AK, Sattler KU. From natural language questions to SPARQL queries: a\npattern-based approach. BTW 2019. https://dl.gi.de/handle/20.500.12116/21702\n\nhttps://dl.gi.de/handle/20.500.12116/21702\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.52\n\nGenerating SPARQL Queries (II)\n\nSteinmetz N, Arning AK, Sattler KU. From natural language questions to SPARQL queries: a\npattern-based approach. BTW 2019. https://dl.gi.de/handle/20.500.12116/21702\n\nhttps://dl.gi.de/handle/20.500.12116/21702\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.53\n\nGenerating SPARQL Queries: Evaluation\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.54\n\nThe Stanford Question Answering Dataset (SQuAD)\n\nhttps://rajpurkar.github.io/SQuAD-explorer/\n\n\xe2\x86\x92 Worksheet #7: Task 6\n\nhttps://rajpurkar.github.io/SQuAD-explorer/\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.55\n\nIBM Watson\n\nWatson is a type of question-answering (QA) system, first developed 2006\xe2\x80\x932011\n\n2011 Jeopardy! competition: 2,880 POWER7 threads and 16 terabytes of RAM\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.56\n\nIBM Watson: The Science Behind an Answer (2011)\n\nhttps://www.youtube.com/watch?v=_0-priuvAR4\n\nhttps://www.youtube.com/watch?v=_0-priuvAR4\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.57\n\nOutline\n\n1 Introduction\n\n2 Search-Based Bots\n\n3 Pattern-Matching Bots\n\n4 Grounding-Based Bots\n\n5 Chatbot Design\nDesign process\nSummary\n\n6 Notes and Further Reading\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.58\n\nBot Design Process\n\nUser Stories\n\n\xe2\x80\xa2 Develop pairs of user questions \xe2\x80\x93 expected answers\n\xe2\x80\xa2 Generalize multiple stories with the same theme\n\nDevelopment\n\n\xe2\x80\xa2 Identify appropriate technology for specific type of question\n\xe2\x80\xa2 Enhance bot based on approach (e.g., add data for retrieval)\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.59\n\nSummary of Chatbot Approaches\n\nCopyright 2019 by Manning Publications Co., [LHH19]\n\n\xe2\x86\x92 Worksheet #7: Task 7\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.60\n\nOutline\n\n1 Introduction\n\n2 Search-Based Bots\n\n3 Pattern-Matching Bots\n\n4 Grounding-Based Bots\n\n5 Chatbot Design\n\n6 Notes and Further Reading\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.61\n\nReading Material\n\nRequired\n\n\xe2\x80\xa2 [LHH19, Chapter 12] (Dialog engines)\n\nSupplemental\n\n\xe2\x80\xa2 [IMF13, Chapter 8] (Building a QA System)\n\xe2\x80\xa2 [RN10, Chapter 26] (Philosophical Foundations)\n\n\n\nRen\xc3\xa9 Witte\n\nIntroduction\nIntelligent Conversational\nAgents\n\nExamples\n\nSearch-Based Bots\n\nPattern-Matching Bots\n\nGrounding-Based Bots\nQuestion Classification\n\nNLP Pipelines\n\nExample: Watson\n\nChatbot Design\nDesign process\n\nSummary\n\nNotes and Further\nReading\n\n8.62\n\nReferences\n\n[IMF13] Grant S. Ingersoll, Thomas S. Morton, and Andrew L. Farris.\nTaming Text: How to find, organise, and manipulate it.\nManning, 2013.\nhttps://concordiauniversity.on.worldcat.org/oclc/772977853.\n\n[LHH19] Hobson Lane, Cole Howard, and Hannes Max Hapke.\nNatural Language Processing in Action.\nManning Publications Co., 2019.\nhttps://concordiauniversity.on.worldcat.org/oclc/1102387045.\n\n[RN10] Stuart Russell and Peter Norvig.\nArtificial Intelligence: A Modern Approach.\nPrentice Hall, 3rd edition, 2010.\nhttps://concordiauniversity.on.worldcat.org/oclc/359890490.\n\nhttps://concordiauniversity.on.worldcat.org/oclc/772977853\nhttps://concordiauniversity.on.worldcat.org/oclc/1102387045\nhttps://concordiauniversity.on.worldcat.org/oclc/359890490\n\n\tChatbots\n\tIntroduction\n\tIntelligent Conversational Agents\n\tExamples\n\n\tSearch-Based Bots\n\tPattern-Matching Bots\n\tGrounding-Based Bots\n\tQuestion Classification\n\tNLP Pipelines\n\tExample: Watson\n\n\tChatbot Design\n\tDesign process\n\tSummary\n\n\tNotes and Further Reading\n\n\n'